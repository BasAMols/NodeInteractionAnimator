{
  "version": 3,
  "sources": ["../ts/dom/domElement.ts", "../ts/utilities/utils.ts", "../ts/interface/section.ts", "../ts/interface/interface.ts", "../ts/interface/panel.ts", "../ts/interface/panels/main.ts", "../ts/interface/panels/node.ts", "../ts/interface/panels/outliner.ts", "../ts/dom/select.ts", "../ts/interface/panels/panelManager.ts", "../ts/interface/panels/properties.ts", "../ts/interface/panels/timeline.ts", "../ts/main.ts", "../ts/index.ts"],
  "sourcesContent": ["export interface DomElementProperties {\r\n    style?: Record<string, string|[string, boolean]>;\r\n    text?: string;\r\n    className?: string;\r\n    id?: string;\r\n    attr?: Record<string, string>;\r\n    onClick?: ()=>void\r\n}\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap> {\r\n    public domElement: HTMLElementTagNameMap[T];\r\n    public onClick?: ()=>void;\r\n\r\n    public set visible(b: boolean) {\r\n        this.setStyleProperty('display', b?undefined: 'none', true)\r\n    }\r\n\r\n    public constructor(type: T, properties: DomElementProperties = {}) {\r\n        this.domElement = document.createElement(type);\r\n        this.domElement.setAttribute('draggable', 'false');\r\n        this.domElement.addEventListener('click', this.click.bind(this))\r\n        if (properties.style) Object.entries(properties?.style).forEach(([k,v])=>{\r\n            this.setStyleProperty(\r\n                k, \r\n                typeof v === 'string'?v:v[0], \r\n                typeof v === 'string'?false:v[1]\r\n            )\r\n        })\r\n        if (properties.attr) Object.entries(properties?.attr).forEach(([k,v])=>{\r\n            this.domElement.setAttribute(k,v)\r\n        })\r\n        if (properties.text) this.domElement.innerHTML = properties.text\r\n        if (properties.className) this.domElement.className = properties.className\r\n        if (properties.id) this.domElement.id = properties.id\r\n    }\r\n\r\n    public setStyleProperty(k:string,v:string|undefined,i:boolean = false) {\r\n        if (v){\r\n            this.domElement.style.setProperty(k,v,i?'important':'')\r\n        } else {\r\n            this.domElement.style.removeProperty(k)\r\n        }\r\n    }\r\n\r\n    public append<T extends keyof HTMLElementTagNameMap>(d: DomElement<T>): DomElement<T> {\r\n        this.domElement.appendChild(d.domElement);\r\n        return d; \r\n    }\r\n\r\n    private click() {\r\n        this.onClick?.()\r\n    }\r\n\r\n\r\n    public remove(d: DomElement<any>) {\r\n        try {\r\n            this.domElement.removeChild(d.domElement)\r\n        } catch (error) {}\r\n    }\r\n}", "\r\nexport abstract class Util {\r\n    public static clamp(value: number, min: number, max: number) {\r\n        return Math.max(Math.min(value, max), min);\r\n    }\r\n    public static to0(value: number, tolerance: number = 0.1) {\r\n        return Math.abs(value) < tolerance ? 0 : value;\r\n    }\r\n    public static chunk(array: unknown[], size: number): typeof array[]{\r\n        const output: unknown[][] = [];\r\n        for (let i=0; i < array.length; i += size) {\r\n            output.push(array.slice(i, i + size));\r\n        }\r\n        return output;\r\n    }\r\n\r\n    public static padArray(ar: any[], b: any, len: number) {\r\n        return ar.concat(Array.from(Array(len).fill(b))).slice(0, len);\r\n    }\r\n\r\n    public static addArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a + br[i]);\r\n    }\r\n\r\n    public static subtractArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a - br[i]);\r\n    }\r\n\r\n    public static multiplyArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a * br[i]);\r\n    }\r\n\r\n    public static scaleArrays(ar: number[], b: number) {\r\n        return ar.map((a, i) => a * b);\r\n    }\r\n\r\n    public static radToDeg(r: number) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n\r\n    public static degToRad(d: number) {\r\n        return d * Math.PI / 180;\r\n    }\r\n\r\n}", "import { DomElement } from '../dom/domElement';\r\nimport { Select } from '../dom/select';\r\nimport { glob } from '../main';\r\nimport { Util } from '../utilities/utils';\r\nimport { Panel } from './panel';\r\n\r\nexport class Section extends DomElement<'div'> {\r\n    protected parent: Section | undefined;\r\n    public contentWrap: DomElement<\"div\">;\r\n    protected dragger: DomElement<\"span\">;\r\n    protected mode: 'split' | 'panel';\r\n    protected panel: Panel | undefined;\r\n    protected sections: [Section, Section] | undefined;\r\n    private _direction: 'v' | 'h' | undefined;\r\n    private panelSwitch: Select;\r\n    private _dragging: boolean;\r\n    public get dragging(): boolean {\r\n        return this._dragging;\r\n    }\r\n    public set dragging(value: boolean) {\r\n        this._dragging = value;\r\n        this.dragger.setStyleProperty('pointerEvents', value ? 'none' : 'auto');\r\n        this.dragger.domElement.classList[value ? 'add' : 'remove']('dragging');\r\n    }\r\n    protected get direction(): 'v' | 'h' | undefined {\r\n        return this._direction;\r\n    }\r\n    protected set direction(value: 'v' | 'h' | undefined) {\r\n        this._direction = value;\r\n        this.domElement.classList[this.direction === 'h' ? 'add' : 'remove']('h');\r\n        this.domElement.classList[this.direction === 'v' ? 'add' : 'remove']('v');\r\n    }\r\n\r\n    private _percentage: number | undefined;\r\n    protected get percentage(): number | undefined {\r\n        return this._percentage;\r\n    }\r\n    protected set percentage(value: number | undefined) {\r\n        this._percentage = Util.clamp(value, 5, 95);\r\n        if (this.sections && this.direction) {\r\n            this.sections[0].setStyleProperty(this.direction === 'h' ? 'width' : 'height', `calc(${this._percentage}% - 3px)`);\r\n            this.sections[1].setStyleProperty(this.direction === 'h' ? 'width' : 'height', `calc(${100 - this._percentage}% - 3px)`);\r\n            this.sections[0].setStyleProperty(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n            this.sections[1].setStyleProperty(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n\r\n            this.dragger.setStyleProperty('left', this.direction === 'h' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n            this.dragger.setStyleProperty('top', this.direction === 'v' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n        }\r\n    }\r\n\r\n    public get activePanel() {\r\n        return this.panel;\r\n    }\r\n\r\n    public setMode(m: 'panel', a: string | undefined): Panel;\r\n    public setMode(m: 'split', a: typeof this.direction, b: number): [Section, Section];\r\n    public setMode(m: typeof this.mode, a: string | undefined | typeof this.direction, b?: number): [Section, Section] | Panel {\r\n        const oldPanel = this.panel;\r\n        this.empty();\r\n        this.mode = m;\r\n\r\n        if (this.mode === 'panel') {\r\n            this.domElement.classList.remove('s_split');\r\n            this.domElement.classList.add('s_panel');\r\n\r\n            this.panel = glob.panels.getPanel(a);\r\n            glob.panels.assign(this.panel, this);\r\n\r\n            this.panelSwitch.value(this.panel?.id);\r\n            this.dragger.visible = false;\r\n            return this.panel;\r\n        } else {\r\n            this.domElement.classList.remove('s_panel');\r\n            this.domElement.classList.add('s_split');\r\n\r\n            this.sections = [\r\n                new Section(this),\r\n                new Section(this)\r\n            ];\r\n            this.sections[0].setMode('panel', oldPanel?.name);\r\n            this.direction = a as typeof this.direction;\r\n            this.percentage = b;\r\n            this.dragger.visible = true;\r\n            return this.sections;\r\n        }\r\n    }\r\n\r\n    public removePanel() {\r\n        if (this.panel) {\r\n            this.contentWrap.remove(this.panel);\r\n            this.panel = undefined;\r\n        }\r\n        this.panelSwitch.value('empty');\r\n    }\r\n\r\n    public empty(del: boolean = false) {\r\n        glob.panels.unassign(this);\r\n        this.removePanel();\r\n        this.direction = undefined;\r\n        this.sections?.forEach((s) => s.empty(true));\r\n        this.sections = undefined;\r\n        this.percentage = undefined;\r\n\r\n        if (del) {\r\n            this.parent?.remove(this);\r\n        }\r\n    }\r\n\r\n    constructor(parent?: Section) {\r\n        super('div', {\r\n            className: 'section'\r\n        });\r\n        if (parent) {\r\n            this.parent = parent;\r\n            this.parent.contentWrap.append(this);\r\n        }\r\n        this.build();\r\n        this.setMode('panel', undefined);\r\n    }\r\n\r\n    private build() {\r\n        this.contentWrap = this.append(new DomElement('div', { className: 'section_content' }));\r\n        this.append(new DomElement('div', {\r\n            className: 'section_outline'\r\n        })) as Select;\r\n        this.dragger = this.append(new DomElement('span', {\r\n            className: 'section_dragger'\r\n        }));\r\n        this.dragger.append(new DomElement('div', {\r\n            className: 'section_dragger_collapse'\r\n        }));\r\n\r\n\r\n        this.domElement.addEventListener('mousemove', this.resize.bind(this));\r\n        this.dragger.domElement.addEventListener('mousedown', () => this.dragging = true);\r\n        this.dragger.domElement.addEventListener('mouseup', () => this.dragging = false);\r\n        this.domElement.addEventListener('mouseup', () => this.dragging = false);\r\n\r\n        this.panelSwitch = this.append(glob.panels.getSelectObject()) as Select;\r\n        this.panelSwitch.onChange = (v) => {\r\n            this.setMode('panel', v);\r\n        };\r\n    }\r\n    private resize(e: MouseEvent) {\r\n        if (this.dragging) {\r\n            let v;\r\n            if (this.direction === 'v') {\r\n                v = (e.y - this.domElement.offsetTop) / this.domElement.offsetHeight * 100;\r\n            } else {\r\n                v = (e.x - this.domElement.offsetLeft) / this.domElement.offsetWidth * 100;\r\n            }\r\n            if (v !== 0) this.percentage = Util.clamp(v, 0, 100);\r\n        }\r\n    }\r\n}", "import { DomElement } from '../dom/domElement';\r\nimport { Section } from './section';\r\n\r\nexport class Interface extends DomElement<'div'>{\r\n    private mainSection = new Section();\r\n    public constructor() {\r\n        super('div', {\r\n            className: 'content'\r\n        });\r\n        this.append(this.mainSection)\r\n    }\r\n\r\n    public build() {\r\n        this.setPreset();\r\n    }\r\n\r\n    public setPreset() {\r\n        this.mainSection.empty();\r\n        const [t, b] = this.mainSection.setMode('split', 'v', 50);\r\n        const [tl, tr] = t.setMode('split', 'h', 70);\r\n        const [trt, trb] = tr.setMode('split', 'v', 50);\r\n\r\n        b.setMode('panel', 'timeline')\r\n        tl.setMode('panel', 'main')\r\n        trt.setMode('panel', 'outliner')\r\n        trb.setMode('panel', 'properties')\r\n    }\r\n}", "import { DomElement } from '../dom/domElement';\r\n\r\nexport class Panel extends DomElement<'div'> {\r\n    constructor(public readonly id: string, public readonly name: string) {\r\n        super('div', {\r\n            className: `panel`,\r\n            id\r\n        })\r\n    }\r\n}", "import { Panel } from '../panel';\r\n\r\nexport class MainPanel extends Panel {\r\n    constructor() {\r\n        super('main', 'Main');\r\n    }\r\n}", "import { Panel } from '../panel';\r\n\r\nexport class NodeEditorPanel extends Panel {\r\n    constructor() {\r\n        super('node', 'Node');\r\n    }\r\n}", "import { Panel } from '../panel';\r\n\r\nexport class OutlinerPanel extends Panel {\r\n    constructor() {\r\n        super('outliner', 'Outliner');\r\n    }\r\n}", "import { DomElement } from './domElement';\r\n\r\nexport interface SelectProp {\r\n    options?: Record<string, string>\r\n    default?: string,\r\n    onChange?: (s: string)=>void\r\n}\r\n\r\nexport class Select extends DomElement<'div'> {\r\n    private select: DomElement<\"select\">;\r\n    public onChange: (s: string) => void;\r\n    public constructor(props: SelectProp = {}) {\r\n        super('div', {className: 'input select'});\r\n        this.select = this.append(new DomElement('select'));\r\n        this.onChange = props.onChange;\r\n        if (props.options)Object.entries(props.options).forEach(([k,v])=>{\r\n            this.addOption(k,v,props.default === k)\r\n        }) \r\n        this.select.domElement.addEventListener('change', ()=>{\r\n            this.change(this.select.domElement.value)\r\n        })\r\n    }\r\n\r\n    value(v:string) {\r\n        this.select.domElement.value = v;\r\n    }\r\n\r\n    change(v:string) {\r\n        this.onChange?.(v)\r\n    }\r\n\r\n    addOption(k:string,v:string,d:boolean = false) {\r\n        this.select.append(new DomElement('option', {\r\n            attr: {\r\n                value: k,\r\n                selected: d?'':undefined\r\n            },\r\n            text: v\r\n        })); \r\n    }\r\n\r\n}", "import { Select } from '../../dom/select';\r\nimport { Panel } from '../panel';\r\nimport { Section } from '../section';\r\n\r\nexport interface PanelData {\r\n    id: string,\r\n    panel: Panel,\r\n    section: Section | undefined;\r\n}\r\n\r\nexport class PanelManager {\r\n    private list: Record<string, PanelData> = {};\r\n    public constructor(panels: Panel[]) {\r\n        panels?.forEach((p) => {\r\n            this.list[p.id] = {\r\n                id: p.id,\r\n                panel: p,\r\n                section: undefined\r\n            };\r\n        });\r\n    }\r\n\r\n    public get(n: string): PanelData {\r\n        return this.list[n];\r\n    }\r\n    public getPanel(n: string): Panel {\r\n        return this.get(n)?.panel;\r\n    }\r\n\r\n    public unassign(n: string | Panel | Section) {\r\n        if (!n) return;\r\n        let p, s;\r\n        if (n instanceof Section) {\r\n            s = n;\r\n            p = n.activePanel;\r\n            if (!p) return;\r\n        } else {\r\n            const d = this.get(typeof n === 'string' ? n : n.name);\r\n            if (!d || !d.panel || !d.section) return;\r\n            s = d.section;\r\n            p = d.panel;\r\n        }\r\n        s.removePanel();\r\n        this.get(p.id).section = undefined;\r\n\r\n    }\r\n    public assign(n: string | Panel, section: Section) {\r\n        if (!n ) return;\r\n        const d = this.get(typeof n === 'string' ? n : n.id);\r\n        \r\n        if (!d ) return;\r\n        if(d.section) this.unassign(d.section);\r\n\r\n        d.section = section;\r\n        d.section.contentWrap.append(d.panel);\r\n    }\r\n    public getSelectObject() {\r\n        return new Select({\r\n            options:\r\n                Object.fromEntries([['empty', ''], ...Object.entries(this.list).map(([k, v]) => {\r\n                    return [k, v.panel.name];\r\n                })])\r\n        });\r\n    }\r\n}", "import { Panel } from '../panel';\r\n\r\nexport class PropertiesPanel extends Panel {\r\n    constructor() {\r\n        super('properties', 'Properties');\r\n    }\r\n}", "import { Panel } from '../panel';\r\n\r\nexport class TimelinePanel extends Panel {\r\n    constructor() {\r\n        super('timeline', 'Timeline');\r\n    }\r\n}", "import { Interface } from './interface/interface';\r\nimport { MainPanel } from './interface/panels/main';\r\nimport { NodeEditorPanel } from './interface/panels/node';\r\nimport { OutlinerPanel } from './interface/panels/outliner';\r\nimport { PanelManager } from './interface/panels/panelManager';\r\nimport { PropertiesPanel } from './interface/panels/properties';\r\nimport { TimelinePanel } from './interface/panels/timeline';\r\nimport { Ticker } from './utilities/ticker';\r\n\r\nexport class Glob {\r\n    public main: Main;\r\n    public interface: Interface ;\r\n    public panels: PanelManager;\r\n};\r\nexport var glob = new Glob;\r\n\r\nexport class Main {\r\n    public ticker: Ticker;\r\n    public glob: Glob;\r\n\r\n    public constructor() {\r\n        this.glob = glob\r\n        glob.main = this;\r\n        glob.panels = new PanelManager([\r\n            new MainPanel(),\r\n            new NodeEditorPanel(),\r\n            new OutlinerPanel(),\r\n            new PropertiesPanel(),\r\n            new TimelinePanel(),\r\n        ])\r\n        glob.interface = new Interface()\r\n        this.build();\r\n    }\r\n\r\n    private build() {\r\n        glob.interface.build();\r\n    }\r\n\r\n    public tick() {\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { Main } from \"./main\";\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    const g = new Main();\r\n    document.body.appendChild(g.glob.interface.domElement);\r\n});"],
  "mappings": "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",
  "names": []
}
