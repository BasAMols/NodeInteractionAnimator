{
  "version": 3,
  "sources": ["../ts/lib/dom/domElement.ts", "../ts/lib/dom/icon.ts", "../ts/lib/utilities/utils.ts", "../ts/lib/utilities/vector2.ts", "../ts/lib/dom/button.ts", "../ts/interface/menu.ts", "../ts/interface/panel.ts", "../ts/interface/section.ts", "../ts/interface/interface.ts", "../ts/interface/panelManager.ts", "../ts/panels/utils/camera.ts", "../ts/panels/cameraPanel.ts", "../ts/panels/node/nodePanel.ts", "../ts/panels/outliner.ts", "../ts/panels/properties.ts", "../ts/panels/timeline.ts", "../ts/panels/graphic/graphicPanel.ts", "../ts/interface/windows/windowManager.ts", "../ts/interface/windows/window.ts", "../ts/interface/windows/settings.ts", "../ts/interface/dragging/dragManager.ts", "../ts/interface/windows/notes.ts", "../ts/main.ts", "../ts/index.ts"],
  "sourcesContent": ["export interface DomElementProperties {\r\n    style?: Record<string, string|[string, boolean]>;\r\n    text?: string;\r\n    className?: string;\r\n    id?: string;\r\n    attr?: Record<string, string>;\r\n    onClick?: ()=>void;\r\n    visible?: boolean,\r\n}\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> {\r\n    public domElement: HTMLElementTagNameMap[T];\r\n    public class(b: boolean = undefined, ...d: string[]):void {\r\n        this.domElement.classList[b?'add':'remove'](...d)\r\n    };\r\n    private _onClick?: () => void;\r\n    public get onClick(): () => void {\r\n        return this._onClick;\r\n    }\r\n    public set onClick(func: () => void|undefined) {\r\n        this._onClick = func;\r\n    }\r\n    private props: DomElementProperties\r\n\r\n    public set visible(b: boolean) {\r\n        this.setStyle('display', b?undefined: 'none', true)\r\n    }\r\n\r\n    public constructor(protected type: T, properties: DomElementProperties = {}) {\r\n        this.props = {...{\r\n            style: {},\r\n            attr: {},\r\n        }, ...properties};\r\n        this.domElement = document.createElement(type);\r\n        this.domElement.setAttribute('draggable', 'false');\r\n        this.domElement.addEventListener('mousedown', this.click.bind(this))\r\n        if (this.props.style) Object.entries(this.props?.style).forEach(([k,v])=>{\r\n            this.setStyle(\r\n                k, \r\n                typeof v === 'string'?v:v[0], \r\n                typeof v === 'string'?false:v[1]\r\n            )\r\n        })\r\n        if (this.props.attr) Object.entries(this.props?.attr).forEach(([k,v])=>{\r\n            this.domElement.setAttribute(k,v)\r\n        })\r\n        if (this.props.text) this.setText(this.props.text);\r\n        if (this.props.className) this.domElement.className = this.props.className\r\n        if (this.props.id) this.domElement.id = this.props.id\r\n        if (this.props.onClick) this.onClick = this.props.onClick\r\n        if (this.props.visible !== undefined) this.visible = this.props.visible\r\n    }\r\n\r\n    public setStyle(k:string,v:string|undefined,i:boolean = false) {\r\n        if (v){\r\n            this.domElement.style.setProperty(k,v,i?'important':'')\r\n            this.props.style[k] = [v,i]\r\n        } else {\r\n            this.domElement.style.removeProperty(k)\r\n            delete this.props.style[k]\r\n        }\r\n    }\r\n    public setAttribute(k:string,v:string) {\r\n        this.domElement.setAttribute(k,v);\r\n        this.props.attr[k] = v\r\n    }\r\n    public setText(t: string) {\r\n        this.domElement.innerText = t;\r\n    }\r\n\r\n    public append<T2 extends keyof HTMLElementTagNameMap>(d: DomElement<T2>): typeof d {\r\n        this.domElement.appendChild(d.domElement);\r\n        return d; \r\n    }\r\n\r\n    public child<T3 extends keyof HTMLElementTagNameMap>(type: T3, properties: DomElementProperties = {}): DomElement<T3> {\r\n        return this.append(new DomElement(type, properties)) as DomElement<T3>\r\n    }\r\n\r\n    private click() {\r\n        this.onClick?.()\r\n    }\r\n\r\n    public remove(d: DomElement<any>) {\r\n        try {\r\n            this.domElement.removeChild(d.domElement)\r\n        } catch (error) {}\r\n    }\r\n\r\n    public clone() {\r\n        return new DomElement(this.type, {...this.props})\r\n    }\r\n}", "import { DomElement } from './domElement';\r\n\r\nexport type IconProperties = {\r\n    name: string,\r\n    weight?: number,\r\n    offset?: [number,number],\r\n    classList?: string\r\n}\r\nexport class Icon extends DomElement<'span'> {\r\n    private fontVariation:{\r\n        FILL:number|undefined,\r\n        wght:number|undefined,\r\n        GRAD:number|undefined,\r\n        opsz:number|undefined,\r\n    } = {\r\n        FILL:0,\r\n        wght:230,\r\n        GRAD:30,\r\n        opsz:20,\r\n    } \r\n    public constructor(properties: IconProperties) {\r\n        super('span', {\r\n            text: properties.name,\r\n            className: `icon material-symbols-outlined ${properties.classList || ''}`,\r\n \r\n        });\r\n        if (properties.weight) this.fontVariation.wght = properties.weight\r\n        if (properties.offset) {\r\n            this.setStyle('transform', `translate(${properties.offset.join('px,')}px)`)\r\n        }\r\n        this.setVariation();\r\n    }\r\n    public setVariation() {\r\n        this.setStyle('font-variation-settings', Object.entries(this.fontVariation).map(([k,v])=>`'${k}' ${v}`).join(','))\r\n    }\r\n    public static make(n?:string, w?:number, o?: [number,number]) {\r\n        return {\r\n            name: n || '',\r\n            weight: w || 200\r\n        } as IconProperties\r\n    }\r\n}", "\r\nexport abstract class Util {\r\n    public static clamp(value: number, min: number, max: number) {\r\n        return Math.max(Math.min(value, max), min);\r\n    }\r\n    public static to0(value: number, tolerance: number = 0.1) {\r\n        return Math.abs(value) < tolerance ? 0 : value;\r\n    }\r\n    public static chunk(array: unknown[], size: number): typeof array[]{\r\n        const output: unknown[][] = [];\r\n        for (let i=0; i < array.length; i += size) {\r\n            output.push(array.slice(i, i + size));\r\n        }\r\n        return output;\r\n    }\r\n\r\n    public static padArray(ar: any[], b: any, len: number) {\r\n        return ar.concat(Array.from(Array(len).fill(b))).slice(0, len);\r\n    }\r\n\r\n    public static addArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a + br[i]);\r\n    }\r\n\r\n    public static subtractArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a - br[i]);\r\n    }\r\n\r\n    public static multiplyArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a * br[i]);\r\n    }\r\n\r\n    public static scaleArrays(ar: number[], b: number) {\r\n        return ar.map((a, i) => a * b);\r\n    }\r\n\r\n    public static radToDeg(r: number) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n\r\n    public static degToRad(d: number) {\r\n        return d * Math.PI / 180;\r\n    }\r\n}", "import { Util } from './utils';\r\n\r\nexport function v2(x?: { x: number, y: number; }): Vector2;\r\nexport function v2(x?: [number, number]): Vector2;\r\nexport function v2(x?: number, y?: number): Vector2;\r\nexport function v2(x?: number | [number, number] | { x: number, y: number; }, y?: number): Vector2 {\r\n    if (x === undefined) return new Vector2(0, 0);\r\n    if (typeof x === 'number') return new Vector2(x, y ?? x);\r\n    if (Array.isArray(x)) return new Vector2(x[0], x[1]);\r\n    if (x.x !== undefined && x.y !== undefined) return new Vector2(x.x, x.y);\r\n    return new Vector2(0, 0);\r\n}\r\n\r\nexport class Vector2 extends Array<number> {\r\n    public get x() {\r\n        return this[0];\r\n    }\r\n    public get y() {\r\n        return this[1];\r\n    }\r\n    constructor(x: number, y: number) {\r\n        super(x, y);\r\n    }\r\n\r\n    //Methods\r\n    public add(v: Vector2): Vector2 {\r\n        return new Vector2(this[0] + v[0], this[1] + v[1]);\r\n    }\r\n    public subtract(v: Vector2): Vector2 {\r\n        return new Vector2(this[0] - v[0], this[1] - v[1]);\r\n    }\r\n    public scale(n: number): Vector2 {\r\n        return new Vector2(this[0] * n, this[1] * n);\r\n    }\r\n    public clampComponents(min:number = 0, max:number = 1) {\r\n        return new Vector2(\r\n            Util.clamp(this[0], min, max), \r\n            Util.clamp(this[1], min, max), \r\n        )\r\n    }\r\n    public divideComponents(v: Vector2): Vector2 {\r\n        if (v.every((n)=>n!==0)){\r\n            return new Vector2(this[0] / v[0], this[1] / v[1]);\r\n        }\r\n        return new Vector2(0,0)\r\n    }\r\n    public c() {\r\n        return new Vector2(this[0], this[1])\r\n    }\r\n}", "import { DomElement, DomElementProperties } from './domElement';\r\nimport { Icon, IconProperties } from './icon';\r\n\r\nexport type ButtonProperties = DomElementProperties & {\r\n    enabled?: boolean,\r\n    icon?: IconProperties\r\n    design?: 'default' | 'unset' | 'icon' | 'inline'\r\n}\r\nexport class Button extends DomElement<'button'> {\r\n    private _enabled: boolean = true;\r\n    span: DomElement<\"span\">;\r\n    public get enabled (){\r\n        return this._enabled;\r\n    }\r\n    public set enabled (b: boolean){\r\n        this._enabled = b;\r\n        this.domElement.classList[b?'remove':'add']('disabled');\r\n    }\r\n\r\n    private _active: boolean = false;\r\n    public get active (){\r\n        return this._active;\r\n    }\r\n    public set active (b: boolean){\r\n        this._active = b;\r\n        this.domElement.classList[b?'add':'remove']('active');\r\n    }\r\n\r\n    public constructor(properties: ButtonProperties = {}) {\r\n        super('button', {...properties, ...{\r\n            text: undefined,\r\n            className: ` button ${properties.className ?? ''} ${properties.design || 'default'}`\r\n        }});\r\n        if (properties.icon) this.append(new Icon(properties.icon));\r\n        if (properties.text) this.span = this.child('span', {\r\n            text: properties.text\r\n        })\r\n        if (properties.enabled) this.enabled = properties.enabled;\r\n    }\r\n\r\n    public setText(t: string): void {\r\n        this.span.setText(t);\r\n\r\n    }\r\n}", "import { Button } from '../lib/dom/button';\r\nimport { DomElement } from '../lib/dom/domElement';\r\nimport { IconProperties } from '../lib/dom/icon';\r\n\r\n\r\nexport interface MenuButtonAction {\r\n    type: 'Action';\r\n    onClick: () => void;\r\n}\r\nexport interface MenuButtonSelect {\r\n    type: 'Select';\r\n    onChange: (v: string) => void;\r\n    data: ({\r\n        key: string,\r\n        name: string,\r\n        icon?: IconProperties;\r\n    } | string)[][];\r\n}\r\nexport interface MenuButtonPanel {\r\n    type: 'Panel';\r\n    data: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        icon?: IconProperties;\r\n    } | string)[][];\r\n}\r\nexport type MenuButton = ({\r\n    key: string,\r\n    name?: string,\r\n    icon?: IconProperties;\r\n    className?: string,\r\n    design?: 'unset' | 'icon' | 'inline' | 'default';\r\n} & (MenuButtonAction | MenuButtonSelect | MenuButtonPanel)) | string;\r\n\r\nexport interface MenuOption {\r\n    type: 'option',\r\n    name: string,\r\n    element: Button;\r\n    onClick: () => void;\r\n    icon?: IconProperties;\r\n}\r\n\r\nexport class MenuP extends DomElement<'div'> {\r\n    private _open: boolean = false;\r\n    public get open(): boolean {\r\n        return this._open;\r\n    }\r\n    public set open(value: boolean) {\r\n        this._open = value;\r\n        this.domElement.classList[value ? 'add' : 'remove']('open');\r\n        this.button.active = value;\r\n    }\r\n    public toggle(b = !this.open) {\r\n        this.open = b;\r\n    }\r\n    protected columns: DomElement<'div'>[] = [];\r\n    protected options: Record<string, {\r\n        column: DomElement<'div'>,\r\n        button: Button,\r\n        hasIcon: boolean,\r\n        label: string,\r\n    }> = {};\r\n    constructor(protected button: Button, d: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        icon?: IconProperties,\r\n        classList?: string,\r\n        design?: 'unset' | 'icon' | 'inline';\r\n    } | string)[][], prop: { classList?: string; } = {}) {\r\n        super('div', { className: 'menu_panel ' + (prop.classList || '') });\r\n\r\n        d.forEach((c) => {\r\n            const column = this.child('div', { className: 'menu_column' });\r\n            const index = this.columns.push(column) - 1;\r\n            c.forEach((a) => {\r\n                this.addOption(a, index);\r\n            });\r\n        });\r\n        this.open = false;\r\n    }\r\n    addOption(a: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        className?: string,\r\n        icon?: IconProperties;\r\n        design?: 'unset' | 'icon' | 'inline';\r\n    } | string), i: number) {\r\n        const column = this.columns[i];\r\n        if (typeof a === 'string') {\r\n            column.child('span', {\r\n                className: 'spacer',\r\n                text: a,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.removeOption(a.key);\r\n        this.options[a.key] = {\r\n            column: column,\r\n            button: column.append(new Button({\r\n                text: a.name,\r\n                onClick: () => {\r\n                    a.onClick();\r\n                    this.open = false;\r\n                },\r\n                icon: a.icon,\r\n                design: a.design || 'inline',\r\n                className: a.className,\r\n            })) as Button,\r\n            hasIcon: Boolean(a.icon),\r\n            label: a.name,\r\n        };\r\n        if (a.icon) column.domElement.classList.add('icons');\r\n    }\r\n    removeOption(key: string) {\r\n        const option = this.options[key];\r\n        if (!option) return;\r\n        option.column.remove(option.button);\r\n        delete this.options[key];\r\n    }\r\n}\r\n\r\nexport class MenuS extends MenuP {\r\n    onChange: (v: string) => void;\r\n    public get open(): boolean {\r\n        return super.open;\r\n    }\r\n    public set open(value: boolean) {\r\n        super.open = value;\r\n        this.button.domElement.classList[value ? 'add' : 'remove']('open');\r\n    }\r\n    constructor(button: Button, c: (v: string) => void, d: ({\r\n        key: string,\r\n        name: string,\r\n        icon?: IconProperties;\r\n    } | string)[][], prop: { classList?: string; } = {}) {\r\n        super(button, d.map((c) => c.map((v) => {\r\n            if (typeof v === 'string') return v;\r\n            return {\r\n                key: v.key,\r\n                name: v.name,\r\n                onClick: () => this.value(v.key),\r\n                icon: v.icon,\r\n            };\r\n        })), prop);\r\n        this.domElement.classList.add('select');\r\n        this.onChange = c;\r\n    }\r\n    public value(key: string) {\r\n        this.silentValue(key);\r\n        this.onChange(key);\r\n    }\r\n    public silentValue(key: string) {\r\n        this.open = false;\r\n        let foundText = '';\r\n        Object.entries(this.options).forEach(([k, v]) => {\r\n            v.button.active = k === key;\r\n            if (k === key) foundText = v.label;\r\n        });\r\n        this.button.setText(foundText);\r\n    }\r\n}\r\n\r\nexport class Menu extends DomElement<'div'> {\r\n    // panels: Record<string, MenuPanel> = {};\r\n    private buttons: Record<string, {\r\n        button: Button;\r\n        panel?: MenuP;\r\n    }> = {};\r\n    // private iterator: number = 0;\r\n    constructor(d?: MenuButton[]) {\r\n        super('div', { className: 'menu' });\r\n        if (d) d.forEach((v) => this.addButton(v));\r\n    }\r\n    public addButton(data: MenuButton) {\r\n        if (typeof data === 'string') {\r\n            this.child('div', { className: `menu_space`, text: data})\r\n        } else {\r\n\r\n            const menuWrap = this.child('div', { className: `menu_wrap menu_type_${data.type.toLowerCase()} ${data.className || ''}` });\r\n            let button: Button, panel: MenuP | MenuS;\r\n            if (data.type === 'Action') {\r\n                button = menuWrap.append(new Button({\r\n                    onClick: data.onClick,\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    design: data.design || 'default'\r\n                })) as Button;\r\n            }\r\n            if (data.type === 'Select') {\r\n                button = menuWrap.append(new Button({\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    className: 'opens',\r\n                    onClick: () => {\r\n                        const b = panel.open;\r\n                        this.closeAll();\r\n                        panel.toggle(!b);\r\n                    },\r\n                    design: data.design || 'default'\r\n                })) as Button;\r\n                panel = menuWrap.append(new MenuS(button, data.onChange, data.data)) as MenuS;\r\n                // button.append(new Icon({name: 'more_vert', weight: 200, offset: [0,0.5]}))\r\n            }\r\n            if (data.type === 'Panel') {\r\n                button = menuWrap.append(new Button({\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    className: 'opens',\r\n                    onClick: () => {\r\n                        const b = panel.open;\r\n                        this.closeAll();\r\n                        panel.toggle(!b);\r\n                    },\r\n                    design: data.design || 'default'\r\n                })) as Button;\r\n                panel = menuWrap.append(new MenuP(button, data.data)) as MenuP;\r\n                // button.append(new Icon({name: 'more_vert', weight: 200, offset: [0,0.5]}))\r\n            }\r\n\r\n            this.buttons[data.key] = {\r\n                button,\r\n                panel\r\n            };\r\n        }\r\n\r\n\r\n    }\r\n    getButton(key: string) {\r\n        return this.buttons[key];\r\n    }\r\n    closeAll() {\r\n        Object.values(this.buttons).forEach((b) => {\r\n            if (b.panel) b.panel.toggle(false);\r\n        });\r\n    }\r\n}", "import { DomElement } from '../lib/dom/domElement';\r\nimport { IconProperties } from '../lib/dom/icon';\r\nimport { Menu } from './menu';\r\n\r\nexport class Panel extends DomElement<'div'> {\r\n    protected content: DomElement<\"div\">;\r\n    protected header: DomElement<\"div\">;\r\n    public size: [number, number] = [0, 0];\r\n    public icon: IconProperties|undefined;\r\n    protected menu: Menu;\r\n    constructor(public readonly id: string, public readonly name: string) {\r\n        super('div', {\r\n            className: `panel`,\r\n            id\r\n        });\r\n        this.header = this.child('div', {\r\n            className: 'panelHeader'\r\n        });\r\n        this.content = this.child('div', {\r\n            className: 'panelContent'\r\n        });\r\n        this.menu = this.header.append(new Menu()) as Menu;\r\n    }\r\n    public resize() {\r\n        const { width, height } = this.content.domElement.getBoundingClientRect();\r\n        this.size = [width, height];\r\n    }\r\n}", "import { DomElement } from '../lib/dom/domElement';\r\nimport { Util } from '../lib/utilities/utils';\r\nimport { Panel } from './panel';\r\nimport { Menu, MenuS } from './menu';\r\n\r\nexport interface sectionContentEmpty {\r\n    type: 'empty',\r\n}\r\nexport interface sectionContentPanel {\r\n    type: 'panel',\r\n    panel: Panel,\r\n}\r\nexport interface sectionContentSplit {\r\n    type: 'split',\r\n    percentage?: number,\r\n    direction?: typeof this.direction,\r\n    sections: [SectionContent, SectionContent];\r\n}\r\nexport type SectionContent = sectionContentEmpty | sectionContentPanel | sectionContentSplit;\r\n\r\n\r\nexport class Section extends DomElement<'div'> {\r\n    resizerKey: string;\r\n    resizer: DomElement<\"span\">;\r\n    static getEmpty(): sectionContentEmpty {\r\n        return {\r\n            type: 'empty',\r\n        };\r\n    }\r\n    static getPanel(n: string): sectionContentPanel {\r\n        return {\r\n            type: 'panel',\r\n            panel: $.panels.getPanel(n)\r\n        };\r\n    }\r\n    static getSplit(c: [SectionContent, SectionContent], d: 'v' | 'h' = 'h', p: number = 50): sectionContentSplit {\r\n        return {\r\n            type: 'split',\r\n            direction: d,\r\n            sections: c,\r\n            percentage: p,\r\n        };\r\n    }\r\n    protected parent: Section | undefined;\r\n    public contentWrap: DomElement<\"div\">;\r\n    protected mode: 'split' | 'panel';\r\n    private panelSwitch: MenuS;\r\n    protected panel: Panel | undefined;\r\n    protected sections: [Section, Section] | undefined;\r\n    private _direction: 'v' | 'h' | undefined;\r\n    private sectionMenu: Menu;\r\n    protected get direction(): 'v' | 'h' | undefined {\r\n        return this._direction;\r\n    }\r\n    protected set direction(value: 'v' | 'h' | undefined) {\r\n        this._direction = value;\r\n        this.class(false, 'v' , 'h');\r\n        this.class(true, this.direction)\r\n        $.drag.able(this.resizerKey, true, value === 'h'?'col-resize':'row-resize')\r\n    }\r\n\r\n    private _percentage: number | undefined;\r\n    protected get percentage(): number | undefined {\r\n        return this._percentage;\r\n    }\r\n    protected set percentage(value: number | undefined) {\r\n        this._percentage = Util.clamp(value, 5, 95);\r\n        if (this.sections) {\r\n            this.sections[0].setStyle(this.direction === 'h' ? 'width' : 'height', `calc(${this._percentage}% - 3px)`);\r\n            this.sections[1].setStyle(this.direction === 'h' ? 'width' : 'height', `calc(${100 - this._percentage}% - 3px)`);\r\n            this.sections[0].setStyle(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n            this.sections[1].setStyle(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n\r\n            this.resizer.setStyle('left', this.direction === 'h' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n            this.resizer.setStyle('top', this.direction === 'v' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n        }\r\n        this.resize();\r\n    }\r\n\r\n    public resize() {\r\n        if (this.mode === 'panel' && this.panel) this.panel.resize();\r\n        if (this.mode === 'split') this.sections?.forEach((s) => s.resize());\r\n    }\r\n\r\n    public get activePanel() {\r\n        return this.panel;\r\n    }\r\n\r\n    public setPanel(panel: string | undefined | Panel = 'empty'): Panel {\r\n        this.fill({\r\n            type: 'panel',\r\n            panel: panel instanceof Panel ? panel : $.panels.getPanel(panel)\r\n        });\r\n        return this.panel;\r\n    }\r\n    public setSplit(direction: typeof this.direction, percentage: number = 50, data?: [SectionContent, SectionContent]) {\r\n        this.fill({\r\n            type: 'split',\r\n            sections: data ? data : [\r\n                Section.getEmpty(),\r\n                Section.getEmpty()\r\n            ],\r\n            percentage,\r\n            direction\r\n        });\r\n        return this.sections;\r\n    }\r\n\r\n    public removePanel() {\r\n        if (this.panel) {\r\n            this.contentWrap.remove(this.panel);\r\n            this.panel = undefined;\r\n            this.class(true, 'empty')\r\n        }\r\n        this.panelSwitch.silentValue('empty');\r\n    }\r\n\r\n    public empty(del: boolean = false) {\r\n        $.panels.unassign(this);\r\n        this.removePanel();\r\n        this.direction = undefined;\r\n        this.sections?.forEach((s) => s.empty(true));\r\n        this.sections = undefined;\r\n        this.percentage = undefined;\r\n        this.class(true, 'empty')\r\n\r\n        if (del) {\r\n            this.parent?.contentWrap.remove(this);\r\n        }\r\n    }\r\n\r\n    public fill(content?: SectionContent): void {\r\n        this.empty();\r\n        if (content && content.type !== 'empty') {\r\n            this.mode = content.type;\r\n            if (content.type === 'panel') {\r\n                this.class(false, 's_split')\r\n                this.class(true, 's_panel')\r\n\r\n                this.panel = content.panel;\r\n                $.panels.assign(this.panel, this);\r\n                this.panelSwitch.silentValue(this.panel?.id);\r\n\r\n                this.class(!Boolean(this.panel), 'empty')\r\n\r\n                this.resizer.visible = false;\r\n            } else {\r\n                this.class(true, 's_split')\r\n                this.class(false, 's_panel')\r\n\r\n                this.sections = content.sections.map((d) => new Section(this, d)) as typeof this.sections;\r\n                this.direction = content.direction || (this.parent.direction === 'v' ? 'h' : 'v');\r\n                this.percentage = content.percentage || 50;\r\n\r\n                this.resizer.visible = true;\r\n            }\r\n        } else {\r\n            this.setPanel();\r\n        }\r\n        this.resize();\r\n    }\r\n    constructor(parent?: Section, content?: SectionContent) {\r\n        super('div', {\r\n            className: 'section empty'\r\n        });\r\n        if (parent) {\r\n            this.parent = parent;\r\n            this.parent.contentWrap.append(this);\r\n        }\r\n        this.build();\r\n        this.fill(content as unknown as Parameters<Section[\"fill\"]>[0]);\r\n\r\n    }\r\n\r\n    public getData(): sectionContentPanel | sectionContentSplit {\r\n        if (this.mode === 'panel') {\r\n            return {\r\n                type: 'panel',\r\n                panel: this.panel\r\n            };\r\n        } else {\r\n            return {\r\n                type: 'split',\r\n                sections: this.sections.map((s) => s.getData()) as [sectionContentPanel | sectionContentSplit, sectionContentPanel | sectionContentSplit],\r\n                percentage: this.percentage,\r\n                direction: this.direction\r\n            };\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private build() {\r\n        this.contentWrap = this.child('div', { className: 'section_content' });\r\n        this.child('div', {\r\n            className: 'section_outline'\r\n        });\r\n        this.resizerKey = $.drag.register($.unique, {\r\n            element: this.resizer = this.child('span', {\r\n                className: `section_dragger`\r\n            }),\r\n            reference: this,\r\n            cursor: this.direction === 'h'?'col-resize':'row-resize',\r\n            move: (e) => {\r\n                if (this.direction === 'v'){\r\n                    this.percentage = e.factor.y*100;\r\n                }\r\n                if (this.direction === 'h'){\r\n                    this.percentage = e.factor.x*100;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sectionMenu = this.append(new Menu([\r\n            ...$.panels.getSelectObject(\r\n                'panel',\r\n                (v: string) => {\r\n                    this.setPanel(v);\r\n                },\r\n                this.parent ? () => {\r\n                    if (this.parent) {\r\n                        const other = this.parent.sections.find((s) => s !== this);\r\n                        const data = other.getData();\r\n                        if (data.type === 'panel') {\r\n                            this.parent.setPanel(other.panel);\r\n                        } else {\r\n                            this.parent.setSplit(other.direction, other.percentage, (other.getData() as sectionContentSplit)?.sections);\r\n                        }\r\n                    }\r\n                } : undefined,\r\n                () => {\r\n                    this.setSplit('v', 50, [\r\n                        { type: 'panel', panel: this.panel },\r\n                        Section.getEmpty()\r\n                    ]);\r\n                },\r\n                () => {\r\n                    this.setSplit('h', 50, [\r\n                        { type: 'panel', panel: this.panel },\r\n                        Section.getEmpty()\r\n                    ]);\r\n                }\r\n            ),\r\n\r\n        ])) as Menu;\r\n\r\n\r\n        this.panelSwitch = this.sectionMenu.getButton('panel').panel as MenuS;\r\n    }\r\n}", "import { Button } from '../lib/dom/button';\r\nimport { DomElement } from '../lib/dom/domElement';\r\nimport { Icon } from '../lib/dom/icon';\r\nimport { v2 } from '../lib/utilities/vector2';\r\nimport { Menu } from './menu';\r\nimport { Section, SectionContent } from './section';\r\n\r\nexport type WorkspacePresetEmpty = [0];\r\nexport type WorkspacePresetSplit = [1, 'v' | 'h', number, WorkspacePresetData?, WorkspacePresetData?];\r\nexport type WorkspacePresetPanel = [2, string];\r\nexport type WorkspacePresetData = WorkspacePresetEmpty | WorkspacePresetSplit | WorkspacePresetPanel;\r\n\r\nexport interface WorkspacePreset {\r\n    name: string,\r\n    data: WorkspacePresetData;\r\n}\r\nexport type WorkspacePresetStorage = WorkspacePreset & {\r\n    button: Button,\r\n};\r\n\r\nexport class WorkSpace extends DomElement<'div'> {\r\n    private mainSection: Section;\r\n    private presets: Record<string, {\r\n        button: Button,\r\n        name: string,\r\n        data: WorkspacePresetData;\r\n    }>;\r\n    header: DomElement<\"header\">;\r\n    public constructor(presets?: Record<string, WorkspacePreset>) {\r\n        super('div', {\r\n            className: 'content'\r\n        });\r\n\r\n        this.append($.windows);\r\n        this.append($.drag);\r\n\r\n        this.buildToolbar(presets);\r\n\r\n        this.mainSection = this.append(new Section()) as Section;\r\n        this.setPreset(presets ? Object.keys(presets)[0] : 'empty');\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.resize();\r\n        });\r\n        this.resize();\r\n\r\n    }\r\n    public resize() {\r\n        $.windowSize = v2(window.innerWidth, window.innerHeight);\r\n        $.windows.resize();\r\n        this.mainSection.resize();\r\n    }\r\n    private buildToolbar(presets?: Record<string, WorkspacePreset>) {\r\n\r\n        const p = { empty: { name: 'Empty', data: [0] } };\r\n        if (presets) Object.assign(p, presets);\r\n\r\n        this.header = this.child('header', {\r\n            id: 'toolbar',\r\n        });\r\n        this.header.append(new Menu([\r\n            {\r\n                key: 'file',\r\n                name: 'File',\r\n                type: 'Panel',\r\n                design: 'inline',\r\n                icon: { name: 'draft', weight: 200 },\r\n                data: [[\r\n                    { key: 'new', name: 'New', icon: Icon.make('library_add'), onClick: () => { } },\r\n                    { key: 'open', name: 'Open...', icon: Icon.make('folder_open'), onClick: () => { } },\r\n                    { key: 'recover', name: 'Recover', icon: Icon.make('restore_page'), onClick: () => { } },\r\n                    '',\r\n                    { key: 'save', name: 'Save', icon: Icon.make('save'), onClick: () => { } },\r\n                    { key: 'saveas', name: 'Save As...', onClick: () => { } },\r\n                    { key: 'import', name: 'Import...', icon: Icon.make('file_open'), onClick: () => { } },\r\n                    { key: 'export', name: 'Export', icon: Icon.make('file_export'), onClick: () => { } },\r\n                    '',\r\n                    { key: 'reset', name: 'Reset', icon: Icon.make('reset_image'), onClick: () => { } },\r\n                ]]\r\n            }, {\r\n                key: 'edit',\r\n                name: 'Edit',\r\n                type: 'Panel',\r\n                design: 'inline',\r\n                icon: { name: 'edit_square', weight: 200 },\r\n                data: [[\r\n                    { key: 'undo', name: 'Undo', icon: Icon.make('undo'), onClick: () => { } },\r\n                    { key: 'redo', name: 'Redo...', icon: Icon.make('redo'), onClick: () => { } },\r\n                    {\r\n                        key: 'options', name: 'Options...', icon: Icon.make('settings'), onClick: () => {\r\n                            $.windows.open('settings');\r\n                        }\r\n                    },\r\n                ]]\r\n            },\r\n            {\r\n                key: 'workspace',\r\n                name: 'Workspace',\r\n                design: 'inline',\r\n                icon: { name: 'dashboard', weight: 200 },\r\n                type: 'Select',\r\n                onChange: (k) => this.setPreset(k),\r\n                data: [Object.entries(p).map(([k, v]) => {\r\n                    return { key: k, name: v.name };\r\n                })]\r\n            },\r\n            {\r\n                key: 'tools',\r\n                name: 'Tools',\r\n                design: 'inline',\r\n                icon: { name: 'construction', weight: 200 },\r\n                type: 'Panel',\r\n                data: [[\r\n                    {\r\n                        key: 'notes', name: 'Notes', icon: Icon.make('notes'), onClick: () => {\r\n                            $.windows.open('notes');\r\n                        }\r\n                    },\r\n                ]]\r\n            }\r\n        ]));\r\n\r\n        this.presets = Object.fromEntries(Object.entries(p).map(([k, v]) => {\r\n            return [k,\r\n                {\r\n                    ...v,\r\n                } as WorkspacePresetStorage\r\n            ];\r\n        }));\r\n    }\r\n\r\n    public setPreset(n: string) {\r\n        if (!this.presets[n]) return;\r\n        this.mainSection.fill(this.presetMap(this.presets[n].data));\r\n    }\r\n    private presetMap(d: WorkspacePresetData): SectionContent {\r\n        if (!d) return Section.getEmpty();\r\n\r\n        return [\r\n            Section.getEmpty(),\r\n            Section.getSplit(\r\n                [this.presetMap(d[3]) || Section.getEmpty(), this.presetMap(d[4]) || Section.getEmpty()],\r\n                d[1] as 'v' | 'h',\r\n                d[2]\r\n            ),\r\n            Section.getPanel(\r\n                d[1]\r\n            )][d[0]];\r\n    }\r\n}\r\n", "import { Icon, IconProperties } from '../lib/dom/icon';\r\nimport { MenuButton } from './menu';\r\nimport { Panel } from './panel';\r\nimport { Section } from './section';\r\n\r\nexport interface PanelData {\r\n    id: string,\r\n    panel: Panel,\r\n    section: Section | undefined;\r\n}\r\n\r\nexport class PanelManager {\r\n    private list: Record<string, PanelData> = {};\r\n    public constructor(panels: Panel[]) {\r\n        panels?.forEach((p) => {\r\n            this.list[p.id] = {\r\n                id: p.id,\r\n                panel: p,\r\n                section: undefined\r\n            };\r\n        });\r\n    }\r\n\r\n    public get(n: string): PanelData {\r\n        return this.list[n];\r\n    }\r\n    public getPanel(n: string): Panel {\r\n        return this.get(n)?.panel;\r\n    }\r\n\r\n    public unassign(n: string | Panel | Section) {\r\n        if (!n) return;\r\n        let p, s;\r\n        if (n instanceof Section) {\r\n            s = n;\r\n            p = n.activePanel;\r\n            if (!p) return;\r\n        } else {\r\n            const d = this.get(typeof n === 'string' ? n : n.name);\r\n            if (!d || !d.panel || !d.section) return;\r\n            s = d.section;\r\n            p = d.panel;\r\n        }\r\n        s.removePanel();\r\n        this.get(p.id).section = undefined;\r\n\r\n    }\r\n    public assign(n: string | Panel, section: Section) {\r\n        if (!n) return;\r\n        const d = this.get(typeof n === 'string' ? n : n.id);\r\n\r\n        if (!d) return;\r\n        if (d.section) this.unassign(d.section);\r\n\r\n        d.section = section;\r\n        d.section.contentWrap.append(d.panel);\r\n    }\r\n    public getSelectObject(\r\n        key: string = 'panel',\r\n        switchPanel?: (v: string) => void,\r\n        close?: () => void,\r\n        splitH?: () => void,\r\n        splitV?: () => void,\r\n    ): MenuButton[] {\r\n        let buttons: MenuButton[] = [];\r\n        let subMenu: {\r\n            key: string,\r\n            name: string,\r\n            onClick: () => void,\r\n            icon: IconProperties;\r\n        }[] = [];\r\n\r\n\r\n        if (switchPanel) {\r\n            let d: (string | {\r\n                key: string;\r\n                name: string;\r\n                icon?: IconProperties;\r\n            })[][] = [[{ key: 'empty', name: '', icon: Icon.make('more_horiz')}]];\r\n            let lastMenu = 0\r\n            for (let i = 0; i < Object.entries(this.list).length; i++) {\r\n                const [k, v] = Object.entries(this.list)[i];\r\n                if (d[lastMenu].length > 2) lastMenu = d.push([]) -1;\r\n                d[lastMenu].push({ key: k, name: v.panel.name, icon: v.panel.icon });\r\n            }\r\n\r\n            buttons.push({\r\n                key: key,\r\n                name: 'Panel',\r\n                type: 'Select',\r\n                onChange: switchPanel,\r\n                icon: Icon.make('grid_view'),\r\n                data: d\r\n            });\r\n\r\n            buttons.push('|');\r\n        }\r\n\r\n        if (splitV) buttons.push({\r\n            type: 'Action',\r\n            key: 'splitV',\r\n            icon: { name: 'splitscreen_vertical_add', weight: 200 },\r\n            design: 'icon',\r\n            onClick: splitV,\r\n        });\r\n        if (splitH) buttons.push({\r\n            type: 'Action',\r\n            key: 'splitH',\r\n            icon: { name: 'splitscreen_add', weight: 200 },\r\n            design: 'icon',\r\n            onClick: splitH,\r\n        });\r\n        if (close) buttons.push({\r\n            type: 'Action',\r\n            key: 'close',\r\n            icon: { name: 'close', weight: 200 },\r\n            design: 'icon',\r\n            onClick: close,\r\n        });\r\n\r\n\r\n        return buttons;\r\n    }\r\n}", "import { Panel } from '../../interface/panel';\r\nimport { DomElement } from '../../lib/dom/domElement';\r\nimport { Util } from '../../lib/utilities/utils';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\n\r\nexport class Camera extends DomElement<'div'> {\r\n    private _dragging: boolean = false;\r\n    public get dragging(): boolean {\r\n        return this._dragging;\r\n    }\r\n    public set dragging(value: boolean) {\r\n        this._dragging = value;\r\n        this.domElement.classList[value ? 'add' : 'remove']('grabbing');\r\n    }\r\n    private position: Vector2 = v2();\r\n    private scale: number = 1;\r\n\r\n    private mover: DomElement<\"div\">;\r\n    public content: DomElement<\"div\">;\r\n    constructor(private parent: Panel, private contentSize?: Vector2, private clamp: boolean = true) {\r\n        super('div', {\r\n            className: 'panelCamera draggable'\r\n        });\r\n        this.mover = this.child('div', {\r\n            className: 'panelCameraMover grid'\r\n        });\r\n        this.content = this.child('div', {\r\n            className: 'panelCameraContent',\r\n            style: {\r\n                width: `${this.contentSize[0]}px`,\r\n                height: `${this.contentSize[1]}px`,\r\n            }\r\n\r\n        });\r\n        this.domElement.addEventListener('wheel', (e) => {\r\n            this.scale = Util.clamp(this.scale + this.scale * (e.deltaY / 100) * -0.1, 0.1, 5);\r\n            this.resize();\r\n        });\r\n        this.domElement.addEventListener('mouseleave', () => {\r\n            this.dragging = false;\r\n        });\r\n        this.domElement.addEventListener('mousedown', () => {\r\n            this.dragging = true;\r\n        });\r\n        this.domElement.addEventListener('mouseup', () => {\r\n            this.dragging = false;\r\n        });\r\n        this.domElement.addEventListener('mousemove', this.mouseMove.bind(this));\r\n    }\r\n    mouseMove(e: MouseEvent) {\r\n        if (this.dragging) {\r\n            this.move(v2(e.movementX, e.movementY));\r\n        }\r\n    }\r\n    move(v: Vector2) {\r\n        this.setPosition(v2(this.position[0] + (v[0]), this.position[1] + (v[1])));\r\n    }\r\n    resize() {\r\n        [0, 1].forEach((i) => {\r\n            this.mover.setStyle(['width', 'height'][i], `${((this.parent.size[i] + (80 * this.scale)) * (1 / this.scale))}px`);\r\n        });\r\n        this.setPosition(this.position);\r\n    }\r\n    setPosition(v: Vector2) {\r\n        [0, 1].forEach((i) => {\r\n            this.position[i] = v[i];\r\n        });\r\n        this.mover.setStyle('transform', `translate(${this.position.map((p) => {\r\n            return (p % (40*this.scale) - (40*this.scale));\r\n        }).join('px,')}px) scale(${this.scale})`);\r\n        this.content.setStyle('transform', `translate(${this.position.map((p) => {\r\n            return p;\r\n        }).join('px,')}px) scale(${this.scale})`);\r\n\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { DomElementProperties, DomElement } from '../lib/dom/domElement';\r\nimport { Vector2 } from '../lib/utilities/vector2';\r\nimport { Camera } from './utils/camera';\r\n\r\nexport abstract class CameraPanel extends Panel {\r\n    private camera: Camera;\r\n    constructor(id: string, name: string, cameraSize: Vector2) {\r\n        super(id,name);\r\n        this.camera = this.content.append(new Camera(this, cameraSize, false)) as Camera;\r\n    }\r\n    public childCamera<T3 extends keyof HTMLElementTagNameMap>(type: T3, properties?: DomElementProperties): DomElement<T3> {\r\n        return this.appendCamera(new DomElement(type,properties))\r\n    }\r\n    public appendCamera<T2 extends keyof HTMLElementTagNameMap>(d: DomElement<T2>): DomElement<T2> {\r\n        return this.camera.content.append(d)\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n        this.camera?.resize();\r\n    }\r\n}", "import { Icon, IconProperties } from '../../lib/dom/icon';\r\nimport { v2 } from '../../lib/utilities/vector2';\r\nimport { CameraPanel } from '../cameraPanel';\r\n\r\nexport class NodeEditorPanel extends CameraPanel {\r\n    public icon: IconProperties = Icon.make('linked_services');\r\n    constructor() {\r\n        super('node', 'Node', v2(2000,1000));\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { IconProperties, Icon } from '../lib/dom/icon';\r\n\r\nexport class OutlinerPanel extends Panel {\r\n        public icon: IconProperties = Icon.make('summarize');\r\n    \r\n    constructor() {\r\n        super('outliner', 'Outliner');\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { IconProperties, Icon } from '../lib/dom/icon';\r\n\r\nexport class PropertiesPanel extends Panel {\r\n    \r\n    public icon: IconProperties = Icon.make('tune');\r\n\r\n    constructor() {\r\n        super('properties', 'Properties');\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { Icon, IconProperties } from '../lib/dom/icon';\r\n\r\nexport class TimelinePanel extends Panel {\r\n\r\n    public icon: IconProperties = Icon.make('timeline');\r\n\r\n    constructor() {\r\n        super('timeline', 'Timeline');\r\n\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('skip_previous'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('resume'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('skip_next'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('autoplay'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n\r\n    }\r\n}", "import { Icon, IconProperties } from '../../lib/dom/icon';\r\nimport { v2 } from '../../lib/utilities/vector2';\r\nimport { CameraPanel } from '../cameraPanel';\r\n\r\nexport class GraphicPanel extends CameraPanel {\r\n    private _light: boolean = false;\r\n    public icon: IconProperties = Icon.make('animation');\r\n    public get light(): boolean {\r\n        return this._light;\r\n    }\r\n    public set light(value: boolean) {\r\n        this._light = value;\r\n        this.class(value, 'light');\r\n    }\r\n    constructor() {\r\n        super('graphic', 'Graphic', v2(505, 545));\r\n        this.childCamera('div', {\r\n            className: '_graphic'\r\n        });\r\n\r\n        this.menu.addButton({\r\n            className: 'panelMenu',\r\n            key: 'graphic_light',\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('light_mode'),\r\n            onClick: () => {\r\n                this.light = !this.light;\r\n            },\r\n        })\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { WindowPanel } from './window';\r\n\r\nexport interface WindowData {\r\n    id: string,\r\n    window: WindowPanel,\r\n}\r\n\r\nexport class WindowManager extends DomElement<'div'> {\r\n    private list: Record<string, WindowData> = {};\r\n    public constructor(windows: WindowPanel[]) {\r\n        super('div', { className: 'windows' });\r\n        windows?.forEach((p, i) => {\r\n            this.list[p.id] = {\r\n                id: p.id,\r\n                window: p,\r\n            };\r\n            this.append(p);\r\n            this.close(p.id);\r\n        });\r\n    }\r\n    public resize() {\r\n        Object.values(this.list).forEach((w) => {\r\n            w.window.resize();\r\n        });\r\n    }\r\n    public open(k: string) {\r\n        this.list[k].window.open = true;\r\n        this.list[k].window.order = -1;\r\n        this.reorder();\r\n    }\r\n    public close(k: string) {\r\n        this.list[k].window.open = false;\r\n    }\r\n    public closeAll() {\r\n        Object.keys(this.list).forEach(this.close);\r\n    }\r\n    public reorder() {\r\n        Object.values(this.list).sort((a, b) => a.window.order - b.window.order).forEach((w, i, a) => {\r\n            w.window.order = i * 2 + (i === (a.length-1) ? 1 : 0);\r\n        });\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { Icon } from '../../lib/dom/icon';\r\nimport { Util } from '../../lib/utilities/utils';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\nimport { Menu } from '../menu';\r\n\r\nexport class WindowPanel extends DomElement<'div'> {\r\n    private _fullscreen: boolean = false;\r\n    resizer: DomElement;\r\n    resizerKey: string;\r\n    public get fullscreen(): boolean {\r\n        return this._fullscreen;\r\n    }\r\n    public set fullscreen(value: boolean) {\r\n        if (this._fullscreen === value) return;\r\n        this._fullscreen = value;\r\n        this.domElement.classList[this.fullscreen ? 'add' : 'remove']('fullscreen');\r\n        if (this.fullscreen) {\r\n            this.preFullscreen = [this.size.c(), this.position.c()];\r\n            this.setSize();\r\n            this.setPosition(v2());\r\n        } else {\r\n            this.setSize(this.preFullscreen[0]);\r\n            this.setPosition(this.preFullscreen[1]);\r\n        }\r\n        $.drag.able(`window_${this.id}`, !this.fullscreen);\r\n\r\n    }\r\n\r\n    protected content: DomElement<\"div\">;\r\n    protected header: DomElement<\"div\">;\r\n    public preFullscreen: [Vector2, Vector2] = [v2(), v2()];\r\n    public size: Vector2 = v2();\r\n    public position: Vector2 = v2(10, 10);\r\n    private _open: boolean = false;\r\n    public get open(): boolean {\r\n        return this._open;\r\n    }\r\n    public set open(value: boolean) {\r\n        this._open = value;\r\n        this.visible = value;\r\n    }\r\n    private _order: number = 0;\r\n    public get order(): number {\r\n        return this._order;\r\n    }\r\n    public set order(value: number) {\r\n        this._order = value;\r\n        this.setStyle('z-index', String(value));\r\n    }\r\n\r\n    constructor(public readonly id: string, public readonly name: string) {\r\n        super('div', {\r\n            className: `window`,\r\n            id\r\n        });\r\n        this.header = this.child('div', {\r\n            className: 'windowHeader'\r\n        });\r\n        this.header.append(new Icon({ name: 'drag_indicator', classList: 'drag' }));\r\n        $.drag.register(`window_${id}`, {\r\n            element: this.header.child('span', {\r\n                text: name,\r\n                className: 'title'\r\n            }),\r\n            move: (e) => {\r\n                this.setPosition(e.relative.add(e.offset));\r\n            },\r\n            start: () => {\r\n                this.focus();\r\n            }\r\n        });\r\n\r\n        this.resizerKey = $.drag.register($.unique, {\r\n            element: this.resizer = this.child('span', {\r\n                className: `window_resizer`\r\n            }),\r\n            reference: this,\r\n            cursor: 'nw-resize',\r\n            move: (e) => {\r\n                this.setSize(e.relative)\r\n            },\r\n            start: ()=>{\r\n                this.focus();\r\n            }\r\n        });\r\n        this.resizer.append(new Icon({name: 'aspect_ratio', weight: 200}))\r\n\r\n        \r\n        this.header.append(new Menu([\r\n            {\r\n                key: 'max',\r\n                name: '',\r\n                className: 'max-button',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('check_box_outline_blank'),\r\n                onClick: () => {\r\n                    this.fullscreen = true;\r\n                }\r\n            },\r\n            {\r\n                key: 'min',\r\n                name: '',\r\n                className: 'min-button',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('filter_none'),\r\n                onClick: () => {\r\n                    this.fullscreen = false;\r\n                }\r\n            },\r\n            {\r\n                key: 'close',\r\n                name: '',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('close'),\r\n                onClick: () => {\r\n                    this.open = false;\r\n                }\r\n            }\r\n        ]));\r\n        this.content = this.child('div', {\r\n            className: 'windowContent'\r\n        });\r\n        this.domElement.addEventListener('click', () => {\r\n            this.focus();\r\n        });\r\n\r\n    }\r\n    public focus() {\r\n        // The top most window always has an even order, so if this is uneven I dont have to reorder the list. \r\n        if (this.order % 2 === 0) {\r\n            this.order = 100;\r\n            $.windows.reorder();\r\n        }\r\n    }\r\n\r\n    public resize() {\r\n        if (this.fullscreen) {\r\n            this.setSize($.windowSize);\r\n            this.setPosition(v2());\r\n        }\r\n        this.setSize();\r\n        this.setPosition();\r\n    }\r\n    public setSize(s: Vector2 = this.size) {\r\n        this.size = s;\r\n        [0, 1].forEach((i) => {\r\n            if (this.fullscreen) {\r\n                this.size[i] = $.windowSize[i];\r\n            } else {\r\n                this.size[i] = Util.clamp(this.size[i], 200, $.windowSize[i] - 20);\r\n            }\r\n            this.setStyle(['width', 'height'][i], `${this.size[i]}px`);\r\n        });\r\n    }\r\n    public setPosition(v: Vector2 = this.position) {\r\n        this.position = v;\r\n        this.setStyle('transform', `translate(${this.position.map((p, i) => {\r\n            return Util.clamp(p, 0, $.windowSize[i] - this.size[i]);\r\n        }).join('px,')}px)`);\r\n    }\r\n}", "import { WindowPanel } from './window';\r\n\r\nexport class Settings extends WindowPanel {\r\n    constructor() {\r\n        super('settings', 'Settings');\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\n\r\nexport interface DragReturnType {\r\n    delta: Vector2,\r\n    absolute: Vector2,\r\n    relative: Vector2,\r\n    offset: Vector2,\r\n    total: Vector2,\r\n    factor: Vector2,\r\n    e: MouseEvent;\r\n}\r\nexport interface DragRegisterType {\r\n    element: DomElement,\r\n    reference?: DomElement,\r\n    cursor?: string,\r\n    move?: (e: DragReturnType) => void,\r\n    start?: () => void,\r\n    end?: () => void,\r\n}\r\nexport interface DragStorageType extends DragRegisterType {\r\n    startOffset?: Vector2;\r\n    elementStart?: Vector2;\r\n    enabled: boolean;\r\n}\r\n\r\nexport class DragManager extends DomElement<'div'> {\r\n    private _dragging: boolean = false;\r\n    public get dragging(): boolean {\r\n        return this._dragging;\r\n    }\r\n    public set dragging(value: boolean) {\r\n        this._dragging = value;\r\n        this.domElement.classList[value ? 'add' : 'remove']('dragging');\r\n    }\r\n    private listeners: Record<string, DragStorageType> = {};\r\n    private current: DragStorageType | undefined;\r\n    public constructor() {\r\n        super('div', { className: 'dragOverlay' });\r\n        this.domElement.addEventListener('mousemove', (e) => {\r\n            if (this.dragging) this.move(e);\r\n        });\r\n        this.domElement.addEventListener('mouseup', this.end.bind(this));\r\n        // this.domElement.addEventListener('mouseout', this.end.bind(this));\r\n    }\r\n    public register(key: string, reg: DragRegisterType) {\r\n        this.listeners[key] = { ...reg, ...{ enabled: true } };\r\n        reg.element.domElement.addEventListener('mousedown', (e: MouseEvent) => {\r\n            if (this.listeners[key].enabled) {\r\n                this.start(key, e);\r\n            }\r\n        });\r\n        reg.element.class(true, `cursor_${reg.cursor ?? 'grab'}`, 'draggable');\r\n        return key;\r\n    }\r\n    public able(key: string, b: boolean, c?: string) {\r\n        if (!this.listeners[key]) return;\r\n        this.listeners[key].enabled = b;\r\n        this.listeners[key].element.domElement.classList[b ? 'add' : 'remove']('draggable');\r\n        if (c) {\r\n            this.listeners[key].element.class(false, `cursor_${this.listeners[key].cursor ?? 'grab'}`);\r\n            this.listeners[key].cursor = c;\r\n            this.listeners[key].element.class(true, `cursor_${this.listeners[key].cursor ?? 'grab'}`);\r\n        }\r\n    }\r\n    public cursor(key: string, c: string) {\r\n        if (!key || !this.listeners[key]) return;\r\n        this.listeners[key].element.class(false, `cursor_${this.listeners[key].cursor ?? 'grab'}`);\r\n        this.listeners[key].cursor = c;\r\n        this.listeners[key].element.class(true, `cursor_${this.listeners[key].cursor ?? 'grab'}`);\r\n    }\r\n    public calcOffsets(key: string, e: MouseEvent) {\r\n        if (!this.listeners[key]) return;\r\n        let elementStart = v2(this.listeners[key].element.domElement.getBoundingClientRect());\r\n        let mouseStart = v2(e.x, e.y);\r\n        this.listeners[key].elementStart = elementStart;\r\n        this.listeners[key].startOffset = elementStart.subtract(mouseStart);\r\n    }\r\n    private start(key: string, e: MouseEvent) {\r\n        if (!this.dragging) {\r\n            this.current = this.listeners[key];\r\n            this.dragging = true;\r\n            this.calcOffsets(key, e);\r\n            this.current.start?.();\r\n        }\r\n    }\r\n    private move(e: MouseEvent) {\r\n        if (this.dragging && this.current.move) {\r\n            const absolute = v2(e.clientX, e.clientY);\r\n            let relative: Vector2, factor: Vector2 = v2();\r\n            if (this.current.reference) {\r\n                const ref = this.current.reference.domElement.getBoundingClientRect();\r\n                relative = absolute.subtract(v2(ref));\r\n                factor = relative.divideComponents(v2(ref.width, ref.height));\r\n            } else {\r\n                relative = absolute;\r\n            }\r\n\r\n            this.current.move({\r\n                relative: relative,\r\n                absolute: absolute,\r\n                offset: this.current.startOffset,\r\n                delta: v2(e.movementX, e.movementY),\r\n                total: absolute.add(this.current.startOffset).subtract(this.current.elementStart),\r\n                factor: factor,\r\n                e,\r\n            });\r\n        }\r\n    }\r\n    private end() {\r\n        if (this.dragging) {\r\n            this.current.end?.();\r\n            this.current = undefined;\r\n            this.dragging = false;\r\n        }\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { WindowPanel } from './window';\r\n\r\nexport class Notes extends WindowPanel {\r\n    private area: DomElement<\"textarea\">;\r\n    private text: string;\r\n    constructor() {\r\n        super('notes', 'Notes');\r\n        this.area = this.content.child('textarea')\r\n        this.area.domElement.addEventListener('change', (v)=>{\r\n            this.text = this.area.domElement.textContent;\r\n        })\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { WorkSpace } from './interface/interface';\r\nimport { PanelManager } from './interface/panelManager';\r\nimport { NodeEditorPanel } from './panels/node/nodePanel';\r\nimport { OutlinerPanel } from './panels/outliner';\r\nimport { PropertiesPanel } from './panels/properties';\r\nimport { TimelinePanel } from './panels/timeline';\r\nimport { Ticker } from './lib/utilities/ticker';\r\nimport { GraphicPanel } from './panels/graphic/graphicPanel';\r\nimport { WindowManager } from './interface/windows/windowManager';\r\nimport { Settings } from './interface/windows/settings';\r\nimport { DragManager } from './interface/dragging/dragManager';\r\nimport { Notes } from './interface/windows/notes';\r\n\r\n\r\n\r\n\r\nexport class Main {\r\n    public ticker: Ticker;\r\n\r\n    public constructor() {\r\n        $.main = this;\r\n        $.drag = new DragManager();\r\n        $.panels = new PanelManager([\r\n            new GraphicPanel(),\r\n            new NodeEditorPanel(),\r\n            new OutlinerPanel(),\r\n            new PropertiesPanel(),\r\n            new TimelinePanel(),\r\n        ])\r\n        $.windows = new WindowManager([\r\n            new Settings(),\r\n            new Notes(),\r\n        ])\r\n        $.workspace = new WorkSpace({\r\n            default: {\r\n                name: 'Default',\r\n                data: [1, 'v', 80, [1, 'h', 70, [2, 'graphic'], [1, 'v', 50, [2, 'outliner'], [2, 'properties']]], [2, 'timeline']]\r\n            }\r\n        })\r\n        $.workspace.resize();\r\n        setTimeout(()=>{\r\n            $.workspace.resize();\r\n        }, 20)\r\n    }\r\n\r\n    public tick() {\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { DragManager } from './interface/dragging/dragManager';\r\nimport { WorkSpace } from './interface/interface';\r\nimport { PanelManager } from './interface/panelManager';\r\nimport { WindowManager } from './interface/windows/windowManager';\r\nimport { Vector2 } from './lib/utilities/vector2';\r\nimport { Main } from \"./main\";\r\n\r\ndeclare global {\r\n  function log(...data: any[]):void;\r\n  var $: Glob\r\n}\r\nclass Glob {\r\n    public main: Main;\r\n    public workspace: WorkSpace ;\r\n    public panels: PanelManager;\r\n    public windows: WindowManager;\r\n    public windowSize: Vector2;\r\n    public drag: DragManager;\r\n    public get unique():string{\r\n      this.uniqueIndex++;\r\n      return (this.uniqueIndex+1000).toString(16);\r\n    }\r\n    private uniqueIndex:number = 0;\r\n};\r\nwindow.$ = new Glob();\r\nwindow.log = console.log;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    const g = new Main();\r\n    document.body.appendChild($.workspace.domElement);\r\n});"],
  "mappings": "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",
  "names": ["c"]
}
