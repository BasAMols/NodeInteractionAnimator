{
  "version": 3,
  "sources": ["../ts/lib/dom/domElement.ts", "../ts/lib/dom/icon.ts", "../ts/lib/utilities/utils.ts", "../ts/lib/utilities/vector2.ts", "../ts/lib/dom/button.ts", "../ts/interface/menu.ts", "../ts/interface/panel.ts", "../ts/interface/section.ts", "../ts/interface/interface.ts", "../ts/interface/panelManager.ts", "../ts/panels/utils/camera.ts", "../ts/panels/cameraPanel.ts", "../ts/panels/node/nodePanel.ts", "../ts/panels/outliner.ts", "../ts/panels/properties/propertiesPanel.ts", "../ts/panels/timeline.ts", "../ts/panels/graphic/graphicPanel.ts", "../ts/interface/windows/windowManager.ts", "../ts/interface/windows/window.ts", "../ts/interface/windows/settings.ts", "../ts/interface/dragging/dragManager.ts", "../ts/interface/windows/notes.ts", "../ts/interface/windows/import.ts", "../ts/interface/windows/export.ts", "../ts/sceneobjects/components/sceneobjectComponent.ts", "../ts/sceneobjects/components/sceneobjectComponentNode.ts", "../ts/sceneobjects/components/sceneobjectComponentOutline.ts", "../ts/sceneobjects/components/sceneobjectComponentProperties.ts", "../ts/lib/dom/domInput.ts", "../ts/lib/dom/domSelect.ts", "../ts/panels/properties/propsInput.ts", "../ts/panels/properties/propsInputSelect.ts", "../ts/panels/properties/propsInputString.ts", "../ts/panels/properties/propsInputVector.ts", "../ts/sceneobjects/components/sceneobjectComponentVisual.ts", "../ts/sceneobjects/sceneobject.ts", "../ts/sceneobjects/sceneobjectManager.ts", "../ts/panels/library/libraryItem.ts", "../ts/panels/library/libraryPanel.ts", "../ts/main.ts", "../ts/index.ts"],
  "sourcesContent": ["export interface DomElementProperties {\r\n    style?: Record<string, string | [string, boolean]>;\r\n    text?: string;\r\n    className?: string;\r\n    id?: string;\r\n    attr?: Record<string, string>;\r\n    onClick?: (e: MouseEvent) => void;\r\n    visible?: boolean,\r\n}\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap = keyof HTMLElementTagNameMap> {\r\n    public domElement: HTMLElementTagNameMap[T];\r\n    public class(b: boolean = undefined, ...d: string[]): void {\r\n        this.domElement.classList[b ? 'add' : 'remove'](...d);\r\n    };\r\n    private _onClick?: (e: MouseEvent) => void;\r\n    public get onClick(): (e: MouseEvent) => void {\r\n        return this._onClick;\r\n    }\r\n    public set onClick(func: (e: MouseEvent) => void | undefined) {\r\n        if (this._onClick) {\r\n            this.domElement.removeEventListener('mousedown', this._onClick.bind(this));\r\n            this._onClick = undefined;\r\n        }\r\n        if (func) {\r\n            this._onClick = func;\r\n            this.domElement.addEventListener('mousedown', this._onClick.bind(this));\r\n        }\r\n    }\r\n    protected props: DomElementProperties;\r\n\r\n    public set visible(b: boolean) {\r\n        this.setStyle('display', b ? undefined : 'none', true);\r\n    }\r\n\r\n    public constructor(protected type: T, properties: DomElementProperties = {}) {\r\n        this.props = {\r\n            ...{\r\n                style: {},\r\n                attr: {},\r\n            }, ...properties\r\n        };\r\n        this.domElement = document.createElement(type);\r\n        this.domElement.setAttribute('draggable', 'false');\r\n\r\n        if (this.props.onClick) this.onClick = this.props.onClick.bind(this);\r\n        if (this.props.style) Object.entries(this.props?.style).forEach(([k, v]) => {\r\n            this.setStyle(\r\n                k,\r\n                typeof v === 'string' ? v : v[0],\r\n                typeof v === 'string' ? false : v[1]\r\n            );\r\n        });\r\n        if (this.props.attr) Object.entries(this.props?.attr).forEach(([k, v]) => {\r\n            this.domElement.setAttribute(k, v);\r\n        });\r\n        if (this.props.text) this.setText(this.props.text);\r\n        if (this.props.className) this.domElement.className = this.props.className;\r\n        if (this.props.id) this.domElement.id = this.props.id;\r\n        if (this.props.visible !== undefined) this.visible = this.props.visible;\r\n    }\r\n\r\n    public setStyle(k: string, v: string | undefined, i: boolean = false) {\r\n        if (v) {\r\n            this.domElement.style.setProperty(k, v, i ? 'important' : '');\r\n            this.props.style[k] = [v, i];\r\n        } else {\r\n            this.domElement.style.removeProperty(k);\r\n            delete this.props.style[k];\r\n        }\r\n    }\r\n    public setAttribute(k: string, v: string) {\r\n        this.domElement.setAttribute(k, v);\r\n        this.props.attr[k] = v;\r\n    }\r\n    public setText(t: string) {\r\n        this.domElement.innerText = t;\r\n    }\r\n\r\n    public append<T2 extends keyof HTMLElementTagNameMap>(d: DomElement<T2>): typeof d {\r\n        this.domElement.appendChild(d.domElement);\r\n        return d;\r\n    }\r\n\r\n    public child<T3 extends keyof HTMLElementTagNameMap>(type: T3, properties: DomElementProperties = {}): DomElement<T3> {\r\n        return this.append(new DomElement(type, properties)) as DomElement<T3>;\r\n    }\r\n\r\n    private click(e: MouseEvent) {\r\n        this.onClick?.(e);\r\n    }\r\n\r\n    public remove(d: DomElement<any>) {\r\n        try {\r\n            this.domElement.removeChild(d.domElement);\r\n        } catch (error) { }\r\n    }\r\n\r\n    public clone() {\r\n        return new DomElement(this.type, { ...this.props });\r\n    }\r\n}", "import { DomElement } from './domElement';\r\n\r\nexport type IconProperties = {\r\n    name: string,\r\n    weight?: number,\r\n    offset?: [number,number],\r\n    classList?: string\r\n}\r\nexport class Icon extends DomElement<'span'> {\r\n    private fontVariation:{\r\n        FILL:number|undefined,\r\n        wght:number|undefined,\r\n        GRAD:number|undefined,\r\n        opsz:number|undefined,\r\n    } = {\r\n        FILL:0,\r\n        wght:230,\r\n        GRAD:30,\r\n        opsz:20,\r\n    } \r\n    public constructor(properties: IconProperties) {\r\n        super('span', {\r\n            text: properties.name,\r\n            className: `icon material-symbols-outlined ${properties.classList || ''}`,\r\n \r\n        });\r\n        if (properties.weight) this.fontVariation.wght = properties.weight\r\n        if (properties.offset) {\r\n            this.setStyle('transform', `translate(${properties.offset.join('px,')}px)`)\r\n        }\r\n        this.setVariation();\r\n    }\r\n    public setVariation() {\r\n        this.setStyle('font-variation-settings', Object.entries(this.fontVariation).map(([k,v])=>`'${k}' ${v}`).join(','))\r\n    }\r\n    public static make(n?:string, w?:number, o?: [number,number]) {\r\n        return {\r\n            name: n || '',\r\n            weight: w || 200\r\n        } as IconProperties\r\n    }\r\n}", "\r\nexport abstract class Util {\r\n    public static clamp(value: number, min: number, max: number) {\r\n        return Math.max(Math.min(value, max), min);\r\n    }\r\n    public static to0(value: number, tolerance: number = 0.1) {\r\n        return Math.abs(value) < tolerance ? 0 : value;\r\n    }\r\n    public static chunk(array: unknown[], size: number): typeof array[]{\r\n        const output: unknown[][] = [];\r\n        for (let i=0; i < array.length; i += size) {\r\n            output.push(array.slice(i, i + size));\r\n        }\r\n        return output;\r\n    }\r\n\r\n    public static padArray(ar: any[], b: any, len: number) {\r\n        return ar.concat(Array.from(Array(len).fill(b))).slice(0, len);\r\n    }\r\n\r\n    public static addArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a + br[i]);\r\n    }\r\n\r\n    public static subtractArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a - br[i]);\r\n    }\r\n\r\n    public static multiplyArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a * br[i]);\r\n    }\r\n\r\n    public static scaleArrays(ar: number[], b: number) {\r\n        return ar.map((a, i) => a * b);\r\n    }\r\n\r\n    public static radToDeg(r: number) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n\r\n    public static degToRad(d: number) {\r\n        return d * Math.PI / 180;\r\n    }\r\n}", "import { Util } from './utils';\r\n\r\nexport function v2(x?: { x: number, y: number; }): Vector2;\r\nexport function v2(x?: [number, number]): Vector2;\r\nexport function v2(x?: number, y?: number): Vector2;\r\nexport function v2(x?: number | [number, number] | { x: number, y: number; }, y?: number): Vector2 {\r\n    if (x === undefined) return new Vector2(0, 0);\r\n    if (typeof x === 'number') return new Vector2(x, y ?? x);\r\n    if (Array.isArray(x)) return new Vector2(x[0], x[1]);\r\n    if (x.x !== undefined && x.y !== undefined) return new Vector2(x.x, x.y);\r\n    return new Vector2(0, 0);\r\n}\r\n\r\nexport class Vector2 extends Array<number> {\r\n    public get x() {\r\n        return this[0];\r\n    }\r\n    public get y() {\r\n        return this[1];\r\n    }\r\n    constructor(x: number, y: number) {\r\n        super(x, y);\r\n    }\r\n\r\n    //Methods\r\n    public add(v: Vector2): Vector2 {\r\n        return new Vector2(this[0] + v[0], this[1] + v[1]);\r\n    }\r\n    public subtract(v: Vector2): Vector2 {\r\n        return new Vector2(this[0] - v[0], this[1] - v[1]);\r\n    }\r\n    public scale(n: number): Vector2 {\r\n        return new Vector2(this[0] * n, this[1] * n);\r\n    }\r\n    public clampComponents(min:number = 0, max:number = 1) {\r\n        return new Vector2(\r\n            Util.clamp(this[0], min, max), \r\n            Util.clamp(this[1], min, max), \r\n        )\r\n    }\r\n    public divideComponents(v: Vector2): Vector2 {\r\n        if (v.every((n)=>n!==0)){\r\n            return new Vector2(this[0] / v[0], this[1] / v[1]);\r\n        }\r\n        return new Vector2(0,0)\r\n    }\r\n    public floor() {\r\n        return new Vector2(\r\n            Math.floor(this.x),\r\n            Math.floor(this.y),\r\n        )\r\n    }\r\n    public c() {\r\n        return new Vector2(this[0], this[1])\r\n    }\r\n    public magnitude(): number {\r\n        return (this.x * this.x) + (this.y * this.y)\r\n    }\r\n}", "import { DomElement, DomElementProperties } from './domElement';\r\nimport { Icon, IconProperties } from './icon';\r\n\r\nexport type ButtonProperties = DomElementProperties & {\r\n    enabled?: boolean,\r\n    icon?: IconProperties\r\n    hover?: string,\r\n    design?: 'default' | 'unset' | 'icon' | 'inline'\r\n}\r\nexport class Button extends DomElement<'button'> {\r\n    private _enabled: boolean = true;\r\n    span: DomElement<\"span\">;\r\n    public get enabled (){\r\n        return this._enabled;\r\n    }\r\n    public set enabled (b: boolean){\r\n        this._enabled = b;\r\n        this.domElement.classList[b?'remove':'add']('disabled');\r\n    }\r\n\r\n    private _active: boolean = false;\r\n    public get active (){\r\n        return this._active;\r\n    }\r\n    public set active (b: boolean){\r\n        this._active = b;\r\n        this.domElement.classList[b?'add':'remove']('active');\r\n    }\r\n\r\n    public constructor(properties: ButtonProperties = {}) {\r\n        super('button', {...properties, ...{\r\n            text: undefined,\r\n            className: ` button ${properties.className ?? ''} ${properties.design || 'default'}`\r\n        }});\r\n        if (properties.icon) this.append(new Icon(properties.icon));\r\n        if (properties.text) this.span = this.child('span', {\r\n            text: properties.text\r\n        })\r\n        if (properties.hover) this.child('span', {\r\n            className: 'tooltip',\r\n            text: properties.text\r\n        })\r\n        if (properties.enabled) this.enabled = properties.enabled;\r\n    }\r\n\r\n    public setText(t: string): void {\r\n        this.span.setText(t);\r\n\r\n    }\r\n}", "import { Button } from '../lib/dom/button';\r\nimport { DomElement } from '../lib/dom/domElement';\r\nimport { IconProperties } from '../lib/dom/icon';\r\n\r\n\r\nexport interface MenuButtonAction {\r\n    type: 'Action';\r\n    onClick: () => void;\r\n}\r\nexport interface MenuButtonSelect {\r\n    type: 'Select';\r\n    onChange: (v: string) => void;\r\n    data: ({\r\n        key: string,\r\n        name: string,\r\n        icon?: IconProperties;\r\n    } | string)[][];\r\n}\r\nexport interface MenuButtonPanel {\r\n    type: 'Panel';\r\n    data: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        icon?: IconProperties;\r\n    } | string)[][];\r\n}\r\nexport type MenuButton = ({\r\n    key: string,\r\n    name?: string,\r\n    icon?: IconProperties;\r\n    className?: string,\r\n    hover?: string,\r\n    design?: 'unset' | 'icon' | 'inline' | 'default';\r\n} & (MenuButtonAction | MenuButtonSelect | MenuButtonPanel)) | string;\r\n\r\nexport interface MenuOption {\r\n    type: 'option',\r\n    name: string,\r\n    element: Button;\r\n    onClick: () => void;\r\n    icon?: IconProperties;\r\n}\r\n\r\nexport class MenuP extends DomElement<'div'> {\r\n    private _open: boolean = false;\r\n    public get open(): boolean {\r\n        return this._open;\r\n    }\r\n    public set open(value: boolean) {\r\n        this._open = value;\r\n        this.domElement.classList[value ? 'add' : 'remove']('open');\r\n        this.button.active = value;\r\n    }\r\n    public toggle(b = !this.open) {\r\n        this.open = b;\r\n    }\r\n    protected columns: DomElement<'div'>[] = [];\r\n    protected options: Record<string, {\r\n        column: DomElement<'div'>,\r\n        button: Button,\r\n        hasIcon: boolean,\r\n        label: string,\r\n    }> = {};\r\n    constructor(protected button: Button, d: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        icon?: IconProperties,\r\n        classList?: string,\r\n        design?: 'unset' | 'icon' | 'inline';\r\n    } | string)[][], prop: { classList?: string; } = {}) {\r\n        super('div', { className: 'menu_panel ' + (prop.classList || '') });\r\n\r\n        d.forEach((c) => {\r\n            const column = this.child('div', { className: 'menu_column' });\r\n            const index = this.columns.push(column) - 1;\r\n            c.forEach((a) => {\r\n                this.addOption(a, index);\r\n            });\r\n        });\r\n        this.open = false;\r\n    }\r\n    addOption(a: ({\r\n        key: string,\r\n        name: string,\r\n        onClick: () => void,\r\n        className?: string,\r\n        icon?: IconProperties;\r\n        design?: 'unset' | 'icon' | 'inline';\r\n    } | string), i: number) {\r\n        const column = this.columns[i];\r\n        if (typeof a === 'string') {\r\n            column.child('span', {\r\n                className: 'spacer',\r\n                text: a,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.removeOption(a.key);\r\n        this.options[a.key] = {\r\n            column: column,\r\n            button: column.append(new Button({\r\n                text: a.name,\r\n                onClick: () => {\r\n                    a.onClick();\r\n                    this.open = false;\r\n                },\r\n                icon: a.icon,\r\n                design: a.design || 'inline',\r\n                className: a.className,\r\n            })) as Button,\r\n            hasIcon: Boolean(a.icon),\r\n            label: a.name,\r\n        };\r\n        if (a.icon) column.domElement.classList.add('icons');\r\n    }\r\n    removeOption(key: string) {\r\n        const option = this.options[key];\r\n        if (!option) return;\r\n        option.column.remove(option.button);\r\n        delete this.options[key];\r\n    }\r\n}\r\n\r\nexport class MenuS extends MenuP {\r\n    onChange: (v: string) => void;\r\n    public get open(): boolean {\r\n        return super.open;\r\n    }\r\n    public set open(value: boolean) {\r\n        super.open = value;\r\n        this.button.domElement.classList[value ? 'add' : 'remove']('open');\r\n    }\r\n    constructor(button: Button, c: (v: string) => void, d: ({\r\n        key: string,\r\n        name: string,\r\n        icon?: IconProperties;\r\n    } | string)[][], prop: { classList?: string; } = {}) {\r\n        super(button, d.map((c) => c.map((v) => {\r\n            if (typeof v === 'string') return v;\r\n            return {\r\n                key: v.key,\r\n                name: v.name,\r\n                onClick: () => this.value(v.key),\r\n                icon: v.icon,\r\n            };\r\n        })), prop);\r\n        this.domElement.classList.add('select');\r\n        this.onChange = c;\r\n    }\r\n    public value(key: string) {\r\n        this.silentValue(key);\r\n        this.onChange(key);\r\n    }\r\n    public silentValue(key: string) {\r\n        this.open = false;\r\n        let foundText = '';\r\n        Object.entries(this.options).forEach(([k, v]) => {\r\n            v.button.active = k === key;\r\n            if (k === key) foundText = v.label;\r\n        });\r\n        this.button.setText(foundText);\r\n    }\r\n}\r\n\r\nexport class Menu extends DomElement<'div'> {\r\n    // panels: Record<string, MenuPanel> = {};\r\n    private buttons: Record<string, {\r\n        button: Button;\r\n        panel?: MenuP;\r\n    }> = {};\r\n    // private iterator: number = 0;\r\n    constructor(d?: MenuButton[]) {\r\n        super('div', { className: 'menu' });\r\n        if (d) d.forEach((v) => this.addButton(v));\r\n    }\r\n    public addButton(data: MenuButton) {\r\n        if (typeof data === 'string') {\r\n            this.child('div', { className: `menu_space`, text: data})\r\n        } else {\r\n\r\n            const menuWrap = this.child('div', { className: `menu_wrap menu_type_${data.type.toLowerCase()} ${data.className || ''}` });\r\n            let button: Button, panel: MenuP | MenuS;\r\n            if (data.type === 'Action') {\r\n                button = menuWrap.append(new Button({\r\n                    onClick: data.onClick,\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    design: data.design || 'default',\r\n                    hover: data.hover\r\n                })) as Button;\r\n            }\r\n            if (data.type === 'Select') {\r\n                button = menuWrap.append(new Button({\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    className: 'opens',\r\n                    hover: data.hover,\r\n                    onClick: () => {\r\n                        const b = panel.open;\r\n                        this.closeAll();\r\n                        panel.toggle(!b);\r\n                    },\r\n                    design: data.design || 'default'\r\n                })) as Button;\r\n                panel = menuWrap.append(new MenuS(button, data.onChange, data.data)) as MenuS;\r\n                // button.append(new Icon({name: 'more_vert', weight: 200, offset: [0,0.5]}))\r\n            }\r\n            if (data.type === 'Panel') {\r\n                button = menuWrap.append(new Button({\r\n                    icon: data.icon,\r\n                    text: data.name,\r\n                    className: 'opens',\r\n                    hover: data.hover,\r\n                    onClick: () => {\r\n                        const b = panel.open;\r\n                        this.closeAll();\r\n                        panel.toggle(!b);\r\n                    },\r\n                    design: data.design || 'default'\r\n                })) as Button;\r\n                panel = menuWrap.append(new MenuP(button, data.data)) as MenuP;\r\n                // button.append(new Icon({name: 'more_vert', weight: 200, offset: [0,0.5]}))\r\n            }\r\n\r\n            this.buttons[data.key] = {\r\n                button,\r\n                panel\r\n            };\r\n        }\r\n\r\n\r\n    }\r\n    getButton(key: string) {\r\n        return this.buttons[key];\r\n    }\r\n    closeAll() {\r\n        Object.values(this.buttons).forEach((b) => {\r\n            if (b.panel) b.panel.toggle(false);\r\n        });\r\n    }\r\n}", "import { DomElement } from '../lib/dom/domElement';\r\nimport { IconProperties } from '../lib/dom/icon';\r\nimport { v2, Vector2 } from '../lib/utilities/vector2';\r\nimport { Menu, MenuButton } from './menu';\r\n\r\nexport interface PanelAttr {\r\n    buttons?: MenuButton[],\r\n}\r\nexport class Panel extends DomElement<'div'> {\r\n    protected content: DomElement<\"div\">;\r\n    protected header: DomElement<\"div\">;\r\n    public size: Vector2 = v2(0);\r\n    public icon: IconProperties|undefined;\r\n    protected menu: Menu;\r\n    constructor(public readonly id: string, public readonly name: string, attr: PanelAttr = {} ) {\r\n        super('div', {\r\n            className: `panel`,\r\n            id\r\n        });\r\n        this.header = this.child('div', {\r\n            className: 'panelHeader'\r\n        });\r\n        this.content = this.child('div', {\r\n            className: 'panelContent'\r\n        });\r\n        this.menu = this.header.append(new Menu(attr.buttons)) as Menu;\r\n    }\r\n    public resize() {\r\n        const { width, height } = this.content.domElement.getBoundingClientRect();\r\n        this.size = v2(width, height);\r\n    }\r\n    public build() {\r\n        this.resize();\r\n    }\r\n}", "import { DomElement } from '../lib/dom/domElement';\r\nimport { Util } from '../lib/utilities/utils';\r\nimport { Panel } from './panel';\r\nimport { Menu, MenuS } from './menu';\r\n\r\nexport interface sectionContentEmpty {\r\n    type: 'empty',\r\n}\r\nexport interface sectionContentPanel {\r\n    type: 'panel',\r\n    panel: Panel,\r\n}\r\nexport interface sectionContentSplit {\r\n    type: 'split',\r\n    percentage?: number,\r\n    direction?: typeof this.direction,\r\n    sections: [SectionContent, SectionContent];\r\n}\r\nexport type SectionContent = sectionContentEmpty | sectionContentPanel | sectionContentSplit;\r\n\r\n\r\nexport class Section extends DomElement<'div'> {\r\n    resizerKey: string;\r\n    resizer: DomElement<\"span\">;\r\n    static getEmpty(): sectionContentEmpty {\r\n        return {\r\n            type: 'empty',\r\n        };\r\n    }\r\n    static getPanel(n: string): sectionContentPanel {\r\n        return {\r\n            type: 'panel',\r\n            panel: $.panels.getPanel(n)\r\n        };\r\n    }\r\n    static getSplit(c: [SectionContent, SectionContent], d: 'v' | 'h' = 'h', p: number = 50): sectionContentSplit {\r\n        return {\r\n            type: 'split',\r\n            direction: d,\r\n            sections: c,\r\n            percentage: p,\r\n        };\r\n    }\r\n    protected parent: Section | undefined;\r\n    public contentWrap: DomElement<\"div\">;\r\n    protected mode: 'split' | 'panel';\r\n    private panelSwitch: MenuS;\r\n    protected panel: Panel | undefined;\r\n    protected sections: [Section, Section] | undefined;\r\n    private _direction: 'v' | 'h' | undefined;\r\n    private sectionMenu: Menu;\r\n    protected get direction(): 'v' | 'h' | undefined {\r\n        return this._direction;\r\n    }\r\n    protected set direction(value: 'v' | 'h' | undefined) {\r\n        this._direction = value;\r\n        this.class(false, 'v' , 'h');\r\n        this.class(true, this.direction)\r\n        $.mouse.able(this.resizerKey, true, value === 'h'?'col-resize':'row-resize')\r\n    }\r\n\r\n    private _percentage: number | undefined;\r\n    protected get percentage(): number | undefined {\r\n        return this._percentage;\r\n    }\r\n    protected set percentage(value: number | undefined) {\r\n        this._percentage = Util.clamp(value, 5, 95);\r\n        if (this.sections) {\r\n            this.sections[0].setStyle(this.direction === 'h' ? 'width' : 'height', `calc(${this._percentage}% - 3px)`);\r\n            this.sections[1].setStyle(this.direction === 'h' ? 'width' : 'height', `calc(${100 - this._percentage}% - 3px)`);\r\n            this.sections[0].setStyle(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n            this.sections[1].setStyle(this.direction === 'h' ? 'height' : 'width', `100%`);\r\n\r\n            this.resizer.setStyle('left', this.direction === 'h' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n            this.resizer.setStyle('top', this.direction === 'v' ? `calc(${this._percentage}% - 3px)` : '4px');\r\n        }\r\n        this.resize();\r\n    }\r\n\r\n    public resize() {\r\n        if (this.mode === 'panel' && this.panel) this.panel.resize();\r\n        if (this.mode === 'split') this.sections?.forEach((s) => s.resize());\r\n    }\r\n\r\n    public get activePanel() {\r\n        return this.panel;\r\n    }\r\n\r\n    public setPanel(panel: string | undefined | Panel = 'empty'): Panel {\r\n        this.fill({\r\n            type: 'panel',\r\n            panel: panel instanceof Panel ? panel : $.panels.getPanel(panel)\r\n        });\r\n        return this.panel;\r\n    }\r\n    public setSplit(direction: typeof this.direction, percentage: number = 50, data?: [SectionContent, SectionContent]) {\r\n        this.fill({\r\n            type: 'split',\r\n            sections: data ? data : [\r\n                Section.getEmpty(),\r\n                Section.getEmpty()\r\n            ],\r\n            percentage,\r\n            direction\r\n        });\r\n        return this.sections;\r\n    }\r\n\r\n    public removePanel() {\r\n        if (this.panel) {\r\n            this.contentWrap.remove(this.panel);\r\n            this.panel = undefined;\r\n            this.class(true, 'empty')\r\n        }\r\n        this.panelSwitch.silentValue('empty');\r\n    }\r\n\r\n    public empty(del: boolean = false) {\r\n        $.panels.unassign(this);\r\n        this.removePanel();\r\n        this.direction = undefined;\r\n        this.sections?.forEach((s) => s.empty(true));\r\n        this.sections = undefined;\r\n        this.percentage = undefined;\r\n        this.class(true, 'empty')\r\n\r\n        if (del) {\r\n            this.parent?.contentWrap.remove(this);\r\n        }\r\n    }\r\n\r\n    public fill(content?: SectionContent): void {\r\n        this.empty();\r\n        if (content && content.type !== 'empty') {\r\n            this.mode = content.type;\r\n            if (content.type === 'panel') {\r\n                this.class(false, 's_split')\r\n                this.class(true, 's_panel')\r\n\r\n                this.panel = content.panel;\r\n                $.panels.assign(this.panel, this);\r\n                this.panelSwitch.silentValue(this.panel?.id);\r\n\r\n                this.class(!Boolean(this.panel), 'empty')\r\n\r\n                this.resizer.visible = false;\r\n            } else {\r\n                this.class(true, 's_split')\r\n                this.class(false, 's_panel')\r\n\r\n                this.sections = content.sections.map((d) => new Section(this, d)) as typeof this.sections;\r\n                this.direction = content.direction || (this.parent.direction === 'v' ? 'h' : 'v');\r\n                this.percentage = content.percentage || 50;\r\n\r\n                this.resizer.visible = true;\r\n            }\r\n        } else {\r\n            this.setPanel();\r\n        }\r\n        this.resize();\r\n    }\r\n    constructor(parent?: Section, content?: SectionContent) {\r\n        super('div', {\r\n            className: 'section empty'\r\n        });\r\n        if (parent) {\r\n            this.parent = parent;\r\n            this.parent.contentWrap.append(this);\r\n        }\r\n        this.build();\r\n        this.fill(content as unknown as Parameters<Section[\"fill\"]>[0]);\r\n\r\n    }\r\n\r\n    public getData(): sectionContentPanel | sectionContentSplit {\r\n        if (this.mode === 'panel') {\r\n            return {\r\n                type: 'panel',\r\n                panel: this.panel\r\n            };\r\n        } else {\r\n            return {\r\n                type: 'split',\r\n                sections: this.sections.map((s) => s.getData()) as [sectionContentPanel | sectionContentSplit, sectionContentPanel | sectionContentSplit],\r\n                percentage: this.percentage,\r\n                direction: this.direction\r\n            };\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private build() {\r\n        this.contentWrap = this.child('div', { className: 'section_content' });\r\n        this.child('div', {\r\n            className: 'section_outline'\r\n        });\r\n        this.resizerKey = $.mouse.registerDrag($.unique, {\r\n            element: this.resizer = this.child('span', {\r\n                className: `section_dragger`\r\n            }),\r\n            reference: this,\r\n            cursor: this.direction === 'h'?'col-resize':'row-resize',\r\n            move: (e) => {\r\n                if (this.direction === 'v'){\r\n                    this.percentage = e.factor.y*100;\r\n                }\r\n                if (this.direction === 'h'){\r\n                    this.percentage = e.factor.x*100;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sectionMenu = this.append(new Menu([\r\n            ...$.panels.getSelectObject(\r\n                'panel',\r\n                (v: string) => {\r\n                    this.setPanel(v);\r\n                },\r\n                this.parent ? () => {\r\n                    if (this.parent) {\r\n                        const other = this.parent.sections.find((s) => s !== this);\r\n                        const data = other.getData();\r\n                        if (data.type === 'panel') {\r\n                            this.parent.setPanel(other.panel);\r\n                        } else {\r\n                            this.parent.setSplit(other.direction, other.percentage, (other.getData() as sectionContentSplit)?.sections);\r\n                        }\r\n                    }\r\n                } : undefined,\r\n                () => {\r\n                    this.setSplit('v', 50, [\r\n                        { type: 'panel', panel: this.panel },\r\n                        Section.getEmpty()\r\n                    ]);\r\n                },\r\n                () => {\r\n                    this.setSplit('h', 50, [\r\n                        { type: 'panel', panel: this.panel },\r\n                        Section.getEmpty()\r\n                    ]);\r\n                }\r\n            ),\r\n\r\n        ])) as Menu;\r\n\r\n\r\n        this.panelSwitch = this.sectionMenu.getButton('panel').panel as MenuS;\r\n    }\r\n}", "import { Button } from '../lib/dom/button';\r\nimport { DomElement } from '../lib/dom/domElement';\r\nimport { Icon, IconProperties } from '../lib/dom/icon';\r\nimport { v2 } from '../lib/utilities/vector2';\r\nimport { Menu } from './menu';\r\nimport { Section, SectionContent } from './section';\r\n\r\nexport type WorkspacePresetEmpty = [0];\r\nexport type WorkspacePresetSplit = [1, 'v' | 'h', number, WorkspacePresetData?, WorkspacePresetData?];\r\nexport type WorkspacePresetPanel = [2, string];\r\nexport type WorkspacePresetData = WorkspacePresetEmpty | WorkspacePresetSplit | WorkspacePresetPanel;\r\n\r\nexport interface WorkspacePreset {\r\n    name: string,\r\n    data: WorkspacePresetData;\r\n    icon?: IconProperties\r\n}\r\nexport type WorkspacePresetStorage = WorkspacePreset & {\r\n    button: Button,\r\n};\r\n\r\nexport class WorkSpace extends DomElement<'div'> {\r\n    private mainSection: Section;\r\n    private presets: Record<string, {\r\n        button: Button,\r\n        name: string,\r\n        data: WorkspacePresetData;\r\n    }>;\r\n    header: DomElement<\"header\">;\r\n    public constructor(presets?: Record<string, WorkspacePreset>) {\r\n        super('div', {\r\n            className: 'content'\r\n        });\r\n\r\n        this.append($.windows);\r\n        this.append($.mouse);\r\n\r\n        this.buildToolbar(presets);\r\n\r\n        this.mainSection = this.append(new Section()) as Section;\r\n        this.setPreset(presets ? Object.keys(presets)[0] : 'empty');\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.resize();\r\n        });\r\n        this.resize();\r\n\r\n    }\r\n    public resize() {\r\n        $.windowSize = v2(window.innerWidth, window.innerHeight);\r\n        $.windows.resize();\r\n        this.mainSection.resize();\r\n    }\r\n    private buildToolbar(presets?: Record<string, WorkspacePreset>) {\r\n\r\n        const p:Record<string, WorkspacePreset> = { empty: { name: 'Empty', data: [0], icon: Icon.make('grid_off') } };\r\n        if (presets) Object.assign(p, presets);\r\n\r\n        this.header = this.child('header', {\r\n            id: 'toolbar',\r\n        });\r\n        this.header.append(new Menu([\r\n            {\r\n                key: 'file',\r\n                name: 'File',\r\n                type: 'Panel',\r\n                design: 'inline',\r\n                icon: { name: 'draft', weight: 200 },\r\n                data: [[\r\n                    { key: 'new', name: 'New', icon: Icon.make('library_add'), onClick: () => { } },\r\n                    { key: 'open', name: 'Open...', icon: Icon.make('folder_open'), onClick: () => { } },\r\n                    { key: 'recover', name: 'Recover', icon: Icon.make('restore_page'), onClick: () => { } },\r\n                    '',\r\n                    { key: 'save', name: 'Save', icon: Icon.make('save'), onClick: () => { } },\r\n                    { key: 'saveas', name: 'Save As...', onClick: () => { } },\r\n                    { key: 'import', name: 'Import...', icon: Icon.make('file_open'), onClick: () => {$.windows.open('import'); } },\r\n                    { key: 'export', name: 'Export', icon: Icon.make('file_export'), onClick: () => {$.windows.open('export'); } },\r\n                    '',\r\n                    { key: 'reset', name: 'Reset', icon: Icon.make('reset_image'), onClick: () => {\r\n                        if (window.confirm('This will refresh the page. Are you sure?')) window.location = window.location\r\n                    } },\r\n                ]]\r\n            }, {\r\n                key: 'edit',\r\n                name: 'Edit',\r\n                type: 'Panel',\r\n                design: 'inline',\r\n                icon: { name: 'edit_square', weight: 200 },\r\n                data: [[\r\n                    { key: 'undo', name: 'Undo', icon: Icon.make('undo'), onClick: () => { } },\r\n                    { key: 'redo', name: 'Redo...', icon: Icon.make('redo'), onClick: () => { } },\r\n                    {\r\n                        key: 'empty', name: 'Empty scene', onClick: () => {\r\n                            $.scene.clear();\r\n                        }\r\n                    },\r\n                    '',\r\n                    {\r\n                        key: 'options', name: 'Options...', icon: Icon.make('settings'), onClick: () => {\r\n                            $.windows.open('settings');\r\n                        }\r\n                    },\r\n                ]]\r\n            },\r\n            {\r\n                key: 'workspace',\r\n                name: 'Layout',\r\n                design: 'inline',\r\n                icon: { name: 'dashboard', weight: 200 },\r\n                type: 'Panel',\r\n                data: [Object.entries(p).map(([k, v]) => {\r\n                    return { key: k, icon:v.icon, name: v.name, onClick: ()=>{this.setPreset(k)}};\r\n                })]\r\n            },\r\n            {\r\n                key: 'tools',\r\n                name: 'Tools',\r\n                design: 'inline',\r\n                icon: { name: 'construction', weight: 200 },\r\n                type: 'Panel',\r\n                data: [[\r\n                    {\r\n                        key: 'notes', name: 'Notes', icon: Icon.make('notes'), onClick: () => {\r\n                            $.windows.open('notes');\r\n                        }\r\n                    },\r\n                ]]\r\n            },\r\n            {\r\n                key: 'select',\r\n                name: 'Selected',\r\n                design: 'inline',\r\n                className:'menuSelect',\r\n                icon: { name: 'ink_selection', weight: 200 },\r\n                type: 'Panel',\r\n                data: [[\r\n                    {\r\n                        key: 'des', name: 'Deselect', icon: Icon.make('remove_selection'), onClick: () => {\r\n                            $.scene.focus()\r\n                        }\r\n                    },\r\n                    {\r\n                        key: 'del', name: 'Delete', icon: Icon.make('delete'), onClick: () => {\r\n                            $.scene.remove($.scene.selected)\r\n                        }\r\n                    },\r\n                ]]\r\n            },\r\n        ]));\r\n\r\n        this.presets = Object.fromEntries(Object.entries(p).map(([k, v]) => {\r\n            return [k,\r\n                {\r\n                    ...v,\r\n                } as WorkspacePresetStorage\r\n            ];\r\n        }));\r\n    }\r\n\r\n    public setPreset(n: string) {\r\n        if (!this.presets[n]) return;\r\n        this.mainSection.fill(this.presetMap(this.presets[n].data));\r\n    }\r\n    private presetMap(d: WorkspacePresetData): SectionContent {\r\n        if (!d) return Section.getEmpty();\r\n\r\n        return [\r\n            Section.getEmpty(),\r\n            Section.getSplit(\r\n                [this.presetMap(d[3]) || Section.getEmpty(), this.presetMap(d[4]) || Section.getEmpty()],\r\n                d[1] as 'v' | 'h',\r\n                d[2]\r\n            ),\r\n            Section.getPanel(\r\n                d[1]\r\n            )][d[0]];\r\n    }\r\n}\r\n", "import { Icon, IconProperties } from '../lib/dom/icon';\r\nimport { MenuButton } from './menu';\r\nimport { Panel } from './panel';\r\nimport { Section } from './section';\r\n\r\nexport interface PanelData {\r\n    id: string,\r\n    panel: Panel,\r\n    section: Section | undefined;\r\n}\r\n\r\nexport class PanelManager {\r\n    private list: Record<string, PanelData> = {};\r\n    public constructor(panels: Panel[]) {\r\n        panels?.forEach((p) => {\r\n            this.list[p.id] = {\r\n                id: p.id,\r\n                panel: p,\r\n                section: undefined\r\n            };\r\n        });\r\n    }\r\n\r\n    public get(n: string): PanelData {\r\n        return this.list[n];\r\n    }\r\n    public getPanel(n: string): Panel {\r\n        return this.get(n)?.panel;\r\n    }\r\n    public forEach(f: (value: [string, Panel], index: number, array: [string, Panel][]) => void) {\r\n        Object.entries(this.list).map(([k,d])=>[k,d.panel]).forEach(f)\r\n    };\r\n\r\n    public unassign(n: string | Panel | Section) {\r\n        if (!n) return;\r\n        let p, s;\r\n        if (n instanceof Section) {\r\n            s = n;\r\n            p = n.activePanel;\r\n            if (!p) return;\r\n        } else {\r\n            const d = this.get(typeof n === 'string' ? n : n.name);\r\n            if (!d || !d.panel || !d.section) return;\r\n            s = d.section;\r\n            p = d.panel;\r\n        }\r\n        s.removePanel();\r\n        this.get(p.id).section = undefined;\r\n\r\n    }\r\n    public assign(n: string | Panel, section: Section) {\r\n        if (!n) return;\r\n        const d = this.get(typeof n === 'string' ? n : n.id);\r\n\r\n        if (!d) return;\r\n        if (d.section) this.unassign(d.section);\r\n\r\n        d.section = section;\r\n        d.section.contentWrap.append(d.panel);\r\n    }\r\n    public getSelectObject(\r\n        key: string = 'panel',\r\n        switchPanel?: (v: string) => void,\r\n        close?: () => void,\r\n        splitH?: () => void,\r\n        splitV?: () => void,\r\n    ): MenuButton[] {\r\n        let buttons: MenuButton[] = [];\r\n        let subMenu: {\r\n            key: string,\r\n            name: string,\r\n            onClick: () => void,\r\n            icon: IconProperties;\r\n        }[] = [];\r\n\r\n\r\n        if (switchPanel) {\r\n            let d: (string | {\r\n                key: string;\r\n                name: string;\r\n                icon?: IconProperties;\r\n            })[][] = [[{ key: 'empty', name: '', icon: Icon.make('more_horiz')}]];\r\n            let lastMenu = 0\r\n            for (let i = 0; i < Object.entries(this.list).length; i++) {\r\n                const [k, v] = Object.entries(this.list)[i];\r\n                if (d[lastMenu].length > Math.ceil(Math.sqrt(Object.entries(this.list).length + 1))) lastMenu = d.push([]) -1;\r\n                d[lastMenu].push({ key: k, name: v.panel.name, icon: v.panel.icon });\r\n            }\r\n\r\n            buttons.push({\r\n                key: key,\r\n                name: 'Panel',\r\n                type: 'Select',\r\n                onChange: switchPanel,\r\n                icon: Icon.make('grid_view'),\r\n                data: d\r\n            });\r\n\r\n            buttons.push('|');\r\n        }\r\n\r\n        if (splitV) buttons.push({\r\n            type: 'Action',\r\n            key: 'splitV',\r\n            icon: { name: 'splitscreen_vertical_add', weight: 200 },\r\n            design: 'icon',\r\n            onClick: splitV,\r\n        });\r\n        if (splitH) buttons.push({\r\n            type: 'Action',\r\n            key: 'splitH',\r\n            icon: { name: 'splitscreen_add', weight: 200 },\r\n            design: 'icon',\r\n            onClick: splitH,\r\n        });\r\n        if (close) buttons.push({\r\n            type: 'Action',\r\n            key: 'close',\r\n            icon: { name: 'close', weight: 200 },\r\n            design: 'icon',\r\n            onClick: close,\r\n        });\r\n\r\n\r\n        return buttons;\r\n    }\r\n}", "import { Panel } from '../../interface/panel';\r\nimport { DomElement } from '../../lib/dom/domElement';\r\nimport { Util } from '../../lib/utilities/utils';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\nexport interface CameraProps {\r\n    minZoom: number,\r\n    maxZoom: number,\r\n    scrollSpeed: number,\r\n    contentSize?: Vector2,\r\n}\r\nexport class Camera extends DomElement<'div'> {\r\n    private position: Vector2 = v2();\r\n    public scale: number = 1;\r\n\r\n    private grid: DomElement<\"div\">;\r\n    public content: DomElement<\"div\">;\r\n\r\n    private draggerKey: string;\r\n    private scrollKey: string;\r\n\r\n    public attr: CameraProps = {\r\n        scrollSpeed: 1,\r\n        minZoom: 1,\r\n        maxZoom: 1,\r\n    };\r\n    constructor(private parent: Panel, attr: CameraProps|{}) {\r\n        super('div', {\r\n            className: 'panelCamera'\r\n        });\r\n        Object.assign(this.attr, attr)\r\n        \r\n        this.grid = this.child('div', {\r\n            className: 'panelCameraMover grid'\r\n        });\r\n        this.content = this.child('div', {\r\n            className: 'panelCameraContent',\r\n            style: {\r\n                width: `${this.attr.contentSize?.[0]}px`,\r\n                height: `${this.attr.contentSize?.[1]}px`,\r\n            }\r\n        });\r\n\r\n        this.draggerKey = $.mouse.registerDrag($.unique, {\r\n            element: this,\r\n            cursor: 'grab',\r\n            move: (e) => {\r\n                this.move(e.delta);\r\n            },\r\n        });\r\n\r\n        this.scrollKey = $.mouse.registerScroll($.unique, {\r\n            element: this,\r\n            reference: this.content,\r\n            scroll: (e) => {\r\n                const newScale = Util.clamp(this.scale + this.scale * (e.delta / 100) * (-0.1*this.attr.scrollSpeed), this.attr.minZoom, this.attr.maxZoom);\r\n                this.move(e.relative.scale(1 - newScale / this.scale));\r\n                this.scale = newScale;\r\n                this.resize();\r\n            },\r\n        });\r\n    }\r\n    move(v: Vector2) {\r\n        this.setPosition(v2(this.position[0] + (v[0]), this.position[1] + (v[1])));\r\n    }\r\n    resize() {\r\n        [0, 1].forEach((i) => {\r\n            this.grid.setStyle(['width', 'height'][i], `${((this.parent.size[i] + (100 * this.scale)) * (1 / this.scale))}px`);\r\n        });\r\n        this.setPosition(this.position);\r\n    }\r\n    setPosition(v: Vector2) {\r\n        this.position = v;\r\n        this.grid.setStyle('transform', `translate(${this.position.map((p) => {\r\n            return (p % (50 * this.scale) - (50 * this.scale));\r\n        }).join('px,')}px) scale(${this.scale})`);\r\n        this.content.setStyle('transform', `translate(${this.position.map((p) => {\r\n            return p;\r\n        }).join('px,')}px) scale(${this.scale})`);\r\n    }\r\n    center() {\r\n        if (this.attr.contentSize){\r\n            this.setPosition(this.parent.size.subtract(this.attr.contentSize.scale(this.scale)).scale(0.5))\r\n        } else {\r\n            this.setPosition(v2(0,0))\r\n        }\r\n    }\r\n}", "import { Panel, PanelAttr } from '../interface/panel';\r\nimport { DomElementProperties, DomElement } from '../lib/dom/domElement';\r\nimport { Icon } from '../lib/dom/icon';\r\nimport { Camera, CameraProps } from './utils/camera';\r\n\r\nexport interface CameraPanelAttr extends PanelAttr {\r\n    camera?: CameraProps,\r\n}\r\nexport abstract class CameraPanel extends Panel {\r\n    public camera: Camera;\r\n    constructor(id: string, name: string, attr: CameraPanelAttr = {}) {\r\n        super(id, name, {\r\n            ...attr,\r\n            ...{buttons: [{\r\n                className: 'panelMenu',\r\n                key: 'graphic_center',\r\n                type: 'Action',\r\n                design: 'icon',\r\n                icon: Icon.make('recenter'),\r\n                onClick: () => {\r\n                    this.camera.center();\r\n                },\r\n            }, ...attr.buttons || []]}\r\n        });\r\n        this.camera = this.content.append(new Camera(this, attr.camera || {})) as Camera;\r\n    }\r\n    public childCamera<T3 extends keyof HTMLElementTagNameMap>(type: T3, properties?: DomElementProperties): DomElement<T3> {\r\n        return this.appendCamera(new DomElement(type, properties));\r\n    }\r\n    public appendCamera<T2 extends keyof HTMLElementTagNameMap>(d: DomElement<T2>): DomElement<T2> {\r\n        return this.camera.content.append(d);\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n        this.camera?.resize();\r\n    }\r\n    build() {\r\n        this.camera.center();\r\n    }\r\n}", "import { Icon, IconProperties } from '../../lib/dom/icon';\r\nimport { v2 } from '../../lib/utilities/vector2';\r\nimport { CameraPanel } from '../cameraPanel';\r\n\r\nexport class NodeEditorPanel extends CameraPanel {\r\n    public icon: IconProperties = Icon.make('linked_services');\r\n    constructor() {\r\n        super('node', 'Node', {\r\n            camera: {contentSize: v2(505, 545), minZoom: 0.1, maxZoom: 5, scrollSpeed: 2}\r\n        });\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { IconProperties, Icon } from '../lib/dom/icon';\r\nimport { SceneObject } from '../sceneobjects/sceneobject';\r\n\r\nexport class OutlinerPanel extends Panel {\r\n    public icon: IconProperties = Icon.make('summarize');\r\n\r\n    constructor() {\r\n        super('outliner', 'Outliner');\r\n    }\r\n    empty() {\r\n        this.content.domElement.innerHTML = '';\r\n    }\r\n    addLine(o: SceneObject) {\r\n        this.content.append(o.components.outline.element);\r\n    }\r\n    update(data: SceneObject[]) {\r\n        this.empty();\r\n        data.forEach((s)=>{\r\n            this.addLine(s)\r\n        })\r\n    }\r\n}", "import { Panel } from '../../interface/panel';\r\nimport { IconProperties, Icon } from '../../lib/dom/icon';\r\nimport { SceneObjectComponentProperties } from '../../sceneobjects/components/sceneobjectComponentProperties';\r\n\r\nexport class PropertiesPanel extends Panel {\r\n    \r\n    public icon: IconProperties = Icon.make('tune');\r\n    public active: SceneObjectComponentProperties\r\n\r\n    constructor() {\r\n        super('properties', 'Properties');\r\n    }\r\n\r\n    update(p?: SceneObjectComponentProperties) {\r\n        if (this.active) {\r\n            this.content.remove(this.active.element)\r\n            this.active = undefined;\r\n        }\r\n        if (p) {\r\n            this.content.append(p.element)\r\n            this.active = p\r\n        }\r\n    }\r\n}", "import { Panel } from '../interface/panel';\r\nimport { Icon, IconProperties } from '../lib/dom/icon';\r\n\r\nexport class TimelinePanel extends Panel {\r\n\r\n    public icon: IconProperties = Icon.make('timeline');\r\n\r\n    constructor() {\r\n        super('timeline', 'Timeline');\r\n\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('skip_previous'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('resume'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('skip_next'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n\r\n        this.menu.addButton({\r\n            key: $.unique,\r\n            type: 'Action',\r\n            design: 'icon',\r\n            icon: Icon.make('autoplay'),\r\n            onClick: () => {\r\n\r\n            },\r\n        });\r\n\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { Icon, IconProperties } from '../../lib/dom/icon';\r\nimport { v2 } from '../../lib/utilities/vector2';\r\nimport { SceneObjectComponentVisual } from '../../sceneobjects/components/sceneobjectComponentVisual';\r\nimport { CameraPanel } from '../cameraPanel';\r\n\r\nexport class GraphicPanel extends CameraPanel {\r\n    public icon: IconProperties = Icon.make('animation');\r\n    public graphic: DomElement<\"div\">;\r\n\r\n\r\n    private _light: boolean = false;\r\n    public get light(): boolean {\r\n        return this._light;\r\n    }\r\n    public set light(value: boolean) {\r\n        this._light = value;\r\n        this.class(value, 'light');\r\n        this.menu.getButton('graphic_light').button.active = value;\r\n\r\n    }\r\n\r\n\r\n    private _preview: boolean = false;\r\n    public get preview(): boolean {\r\n        return this._preview;\r\n    }\r\n    public set preview(value: boolean) {\r\n        this._preview = value;\r\n        this.class(value, 'preview');\r\n        this.menu.getButton('graphic_preview').button.active = value;\r\n    }\r\n\r\n\r\n    private components: SceneObjectComponentVisual[] = [];\r\n    constructor() {\r\n        super('graphic', 'Graphic', {\r\n            camera: { contentSize: v2(505, 545), minZoom: 0.1, maxZoom: 5, scrollSpeed: 2 },\r\n            buttons: [{\r\n                key: 'graphic_light',\r\n                type: 'Action',\r\n                design: 'icon',\r\n                icon: Icon.make('light_mode'),\r\n                onClick: () => {\r\n                    this.light = !this.light;\r\n                },\r\n            },\r\n            {\r\n                key: 'graphic_preview',\r\n                type: 'Action',\r\n                design: 'icon',\r\n                icon: Icon.make('view_in_ar'),\r\n                onClick: () => {\r\n                    this.preview = !this.preview;\r\n                },\r\n            }]\r\n        });\r\n        this.graphic = this.childCamera('div', {\r\n            className: '_graphic'\r\n        });\r\n        \r\n    }\r\n    clear() {\r\n        this.components.forEach((v)=>{\r\n            v.delete();\r\n            this.components.splice(this.components.indexOf(v), 1)\r\n        });\r\n    }\r\n    update(d: SceneObjectComponentVisual[]) {\r\n        const rem:SceneObjectComponentVisual[] = [...this.components]\r\n        const add:SceneObjectComponentVisual[] = []\r\n        d.forEach((v)=>{\r\n            if (this.components.includes(v)){\r\n                v.update()\r\n                rem.splice(rem.indexOf(v), 1)\r\n            } else {\r\n                add.push(v)\r\n            }\r\n        })\r\n        if (rem.length > 0){\r\n            rem.forEach((v)=>{\r\n                v.delete()\r\n                this.components.splice(this.components.indexOf(v), 1)\r\n            })\r\n        }\r\n        if (add.length > 0){\r\n            add.forEach((v)=>{\r\n                v.add(this.graphic);\r\n                this.components.push(v)\r\n            })\r\n        }\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { WindowPanel } from './window';\r\n\r\nexport interface WindowData {\r\n    id: string,\r\n    window: WindowPanel,\r\n}\r\n\r\nexport class WindowManager extends DomElement<'div'> {\r\n    private list: Record<string, WindowData> = {};\r\n    public constructor(windows: WindowPanel[]) {\r\n        super('div', { className: 'windows' });\r\n        windows?.forEach((p, i) => {\r\n            this.list[p.id] = {\r\n                id: p.id,\r\n                window: p,\r\n            };\r\n            this.append(p);\r\n            this.close(p.id);\r\n        });\r\n    }\r\n    public resize() {\r\n        Object.values(this.list).forEach((w) => {\r\n            w.window.resize();\r\n        });\r\n    }\r\n    public open(k: string) {\r\n        this.list[k].window.open = true;\r\n        this.list[k].window.order = -1;\r\n        this.reorder();\r\n    }\r\n    public close(k: string) {\r\n        this.list[k].window.open = false;\r\n    }\r\n    public closeAll() {\r\n        Object.keys(this.list).forEach(this.close);\r\n    }\r\n    public reorder() {\r\n        Object.values(this.list).sort((a, b) => a.window.order - b.window.order).forEach((w, i, a) => {\r\n            w.window.order = i * 2 + (i === (a.length-1) ? 1 : 0);\r\n        });\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { Icon } from '../../lib/dom/icon';\r\nimport { Util } from '../../lib/utilities/utils';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\nimport { Menu } from '../menu';\r\n\r\nexport class WindowPanel extends DomElement<'div'> {\r\n    private _fullscreen: boolean = false;\r\n    resizer: DomElement;\r\n    resizerKey: string;\r\n    public get fullscreen(): boolean {\r\n        return this._fullscreen;\r\n    }\r\n    public set fullscreen(value: boolean) {\r\n        if (this._fullscreen === value) return;\r\n        this._fullscreen = value;\r\n        this.domElement.classList[this.fullscreen ? 'add' : 'remove']('fullscreen');\r\n        if (this.fullscreen) {\r\n            this.preFullscreen = [this.size.c(), this.position.c()];\r\n            this.setSize();\r\n            this.setPosition(v2());\r\n        } else {\r\n            this.setSize(this.preFullscreen[0]);\r\n            this.setPosition(this.preFullscreen[1]);\r\n        }\r\n        $.mouse.able(`window_${this.id}`, !this.fullscreen);\r\n\r\n    }\r\n\r\n    protected content: DomElement<\"div\">;\r\n    protected header: DomElement<\"div\">;\r\n    public preFullscreen: [Vector2, Vector2] = [v2(), v2()];\r\n    public size: Vector2 = v2();\r\n    public position: Vector2 = v2(10, 10);\r\n    private _open: boolean = false;\r\n    public get open(): boolean {\r\n        return this._open;\r\n    }\r\n    public set open(value: boolean) {\r\n        this._open = value;\r\n        this.visible = value;\r\n    }\r\n    private _order: number = 0;\r\n    public get order(): number {\r\n        return this._order;\r\n    }\r\n    public set order(value: number) {\r\n        this._order = value;\r\n        this.setStyle('z-index', String(value));\r\n    }\r\n\r\n    constructor(public readonly id: string, public readonly name: string) {\r\n        super('div', {\r\n            className: `window`,\r\n            id\r\n        });\r\n        this.header = this.child('div', {\r\n            className: 'windowHeader'\r\n        });\r\n        this.header.append(new Icon({ name: 'drag_indicator', classList: 'drag' }));\r\n        $.mouse.registerDrag(`window_${id}`, {\r\n            element: this.header.child('span', {\r\n                text: name,\r\n                className: 'title'\r\n            }),\r\n            move: (e) => {\r\n                this.setPosition(e.relative.add(e.offset));\r\n            },\r\n            start: () => {\r\n                this.focus();\r\n            }\r\n        });\r\n\r\n        this.resizerKey = $.mouse.registerDrag($.unique, {\r\n            element: this.resizer = this.child('span', {\r\n                className: `resizer`\r\n            }),\r\n            reference: this,\r\n            cursor: 'nw-resize',\r\n            move: (e) => {\r\n                this.setSize(e.relative)\r\n            },\r\n            start: ()=>{\r\n                this.focus();\r\n            }\r\n        });\r\n        this.resizer.append(new Icon({name: 'aspect_ratio', weight: 200}))\r\n\r\n        \r\n        this.header.append(new Menu([\r\n            {\r\n                key: 'max',\r\n                name: '',\r\n                className: 'max-button',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('check_box_outline_blank'),\r\n                onClick: () => {\r\n                    this.fullscreen = true;\r\n                }\r\n            },\r\n            {\r\n                key: 'min',\r\n                name: '',\r\n                className: 'min-button',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('filter_none'),\r\n                onClick: () => {\r\n                    this.fullscreen = false;\r\n                }\r\n            },\r\n            {\r\n                key: 'close',\r\n                name: '',\r\n                type: 'Action',\r\n                design: 'inline',\r\n                icon: Icon.make('close'),\r\n                onClick: () => {\r\n                    this.open = false;\r\n                }\r\n            }\r\n        ]));\r\n        this.content = this.child('div', {\r\n            className: 'windowContent'\r\n        });\r\n        this.domElement.addEventListener('click', () => {\r\n            this.focus();\r\n        });\r\n\r\n    }\r\n    public focus() {\r\n        // The top most window always has an even order, so if this is uneven I dont have to reorder the list. \r\n        if (this.order % 2 === 0) {\r\n            this.order = 100;\r\n            $.windows.reorder();\r\n        }\r\n    }\r\n\r\n    public resize() {\r\n        if (this.fullscreen) {\r\n            this.setSize($.windowSize);\r\n            this.setPosition(v2());\r\n        }\r\n        this.setSize();\r\n        this.setPosition();\r\n    }\r\n    public setSize(s: Vector2 = this.size) {\r\n        this.size = s;\r\n        [0, 1].forEach((i) => {\r\n            if (this.fullscreen) {\r\n                this.size[i] = $.windowSize[i];\r\n            } else {\r\n                this.size[i] = Util.clamp(this.size[i], 200, $.windowSize[i] - 20);\r\n            }\r\n            this.setStyle(['width', 'height'][i], `${this.size[i]}px`);\r\n        });\r\n    }\r\n    public setPosition(v: Vector2 = this.position) {\r\n        this.position = v;\r\n        this.setStyle('transform', `translate(${this.position.map((p, i) => {\r\n            return Util.clamp(p, 0, $.windowSize[i] - this.size[i]);\r\n        }).join('px,')}px)`);\r\n    }\r\n}", "import { WindowPanel } from './window';\r\n\r\nexport class SettingsPanel extends WindowPanel {\r\n    constructor() {\r\n        super('settings', 'Settings');\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\n\r\nexport interface DragReturnType {\r\n    delta: Vector2,\r\n    absolute: Vector2,\r\n    relative: Vector2,\r\n    offset: Vector2,\r\n    total: Vector2,\r\n    factor: Vector2,\r\n    e: MouseEvent;\r\n}\r\nexport interface DragRegisterType {\r\n    element: DomElement,\r\n    reference?: DomElement,\r\n    cursor?: string,\r\n    initialTolerance?: number,\r\n    move?: (e: DragReturnType) => void,\r\n    start?: () => void,\r\n    end?: () => void,\r\n}\r\nexport interface DragStorageType extends DragRegisterType {\r\n    startOffset?: Vector2;\r\n    elementStart?: Vector2;\r\n    enabled: boolean;\r\n    brokeTolerance: boolean\r\n}\r\nexport interface ScrollReturnType {\r\n    delta: number,\r\n    absolute: Vector2,\r\n    relative: Vector2,\r\n    factor: Vector2,\r\n    e: WheelEvent;\r\n}\r\nexport interface ScrollRegisterType {\r\n    element: DomElement,\r\n    reference?: DomElement,\r\n    scroll?: (e: ScrollReturnType) => void,\r\n}\r\nexport interface ScrollStorageType extends ScrollRegisterType {\r\n    enabled: boolean;\r\n}\r\n\r\nexport class DragManager extends DomElement<'div'> {\r\n    private _dragging: boolean = false;\r\n    public get dragging(): boolean {\r\n        return this._dragging;\r\n    }\r\n    public set dragging(value: boolean) {\r\n        this._dragging = value;\r\n        this.domElement.classList[value ? 'add' : 'remove']('dragging');\r\n        $.state[value?'set':'unset']('dragging');\r\n    }\r\n    private dragListeners: Record<string, DragStorageType> = {};\r\n    private scrollListeners: Record<string, ScrollStorageType> = {};\r\n    private current: DragStorageType | undefined;\r\n    public constructor() {\r\n        super('div', { className: 'dragOverlay' });\r\n        this.domElement.addEventListener('mousemove', (e) => {\r\n            if (this.dragging) this.move(e);\r\n        });\r\n        this.domElement.addEventListener('mouseup', this.end.bind(this));\r\n    }\r\n    public registerDrag(key: string, reg: DragRegisterType) {\r\n        this.dragListeners[key] = { ...reg, ...{ enabled: true, brokeTolerance: false } };\r\n        reg.element.domElement.addEventListener('mousedown', (e: MouseEvent) => {\r\n            if (this.dragListeners[key].enabled) {\r\n                this.start(key, e);\r\n            }\r\n        });\r\n        reg.element.class(true, `cursor_${reg.cursor ?? 'grab'}`, 'draggable');\r\n        return key;\r\n    }\r\n\r\n    public registerScroll(key: string, reg: ScrollRegisterType) {\r\n        this.scrollListeners[key] = { ...reg, ...{ enabled: true } };\r\n        reg.element.domElement.addEventListener('wheel', (e: WheelEvent) => {\r\n            if (this.scrollListeners[key].enabled) {\r\n                this.scroll(key, e);\r\n            }\r\n        });\r\n        reg.element.class(true, 'scrollable');\r\n        return key;\r\n    }\r\n\r\n    public able(key: string, b: boolean, c?: string) {\r\n        if (this.dragListeners[key]) {\r\n            this.dragListeners[key].enabled = b;\r\n            this.dragListeners[key].element.domElement.classList[b ? 'add' : 'remove']('draggable');\r\n            if (c) {\r\n                this.dragListeners[key].element.class(false, `cursor_${this.dragListeners[key].cursor ?? 'grab'}`);\r\n                this.dragListeners[key].cursor = c;\r\n                this.dragListeners[key].element.class(true, `cursor_${this.dragListeners[key].cursor ?? 'grab'}`);\r\n            }\r\n        }\r\n        if (this.scrollListeners[key]) {\r\n            this.scrollListeners[key].enabled = b;\r\n            this.scrollListeners[key].element.domElement.classList[b ? 'add' : 'remove']('scrollable');\r\n        }\r\n\r\n    }\r\n    public cursor(key: string, c: string) {\r\n        if (!key || !this.dragListeners[key]) return;\r\n        this.dragListeners[key].element.class(false, `cursor_${this.dragListeners[key].cursor ?? 'grab'}`);\r\n        this.dragListeners[key].cursor = c;\r\n        this.dragListeners[key].element.class(true, `cursor_${this.dragListeners[key].cursor ?? 'grab'}`);\r\n    }\r\n    public calcOffsets(key: string, e: MouseEvent) {\r\n        if (!this.dragListeners[key]) return;\r\n        let elementStart = v2(this.dragListeners[key].element.domElement.getBoundingClientRect());\r\n        let mouseStart = v2(e.x, e.y);\r\n        this.dragListeners[key].elementStart = elementStart;\r\n        this.dragListeners[key].startOffset = elementStart.subtract(mouseStart);\r\n    }\r\n    private start(key: string, e: MouseEvent) {\r\n        if (!this.dragging) {\r\n            this.current = this.dragListeners[key];\r\n            this.dragging = true;\r\n            this.calcOffsets(key, e);\r\n            this.current.start?.();\r\n            this.current.brokeTolerance = !this.current.initialTolerance;\r\n        }\r\n    }\r\n    private move(e: MouseEvent) {\r\n        if (this.dragging && this.current.move) {\r\n            const absolute = v2(e.clientX, e.clientY);\r\n\r\n            if (!this.current.brokeTolerance) {\r\n                if (this.current.elementStart.subtract(this.current.startOffset).subtract(absolute).magnitude() > this.current.initialTolerance) {\r\n                    this.current.brokeTolerance = true;\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n\r\n            let relative: Vector2, factor: Vector2 = v2();\r\n            if (this.current.reference) {\r\n                const ref = this.current.reference.domElement.getBoundingClientRect();\r\n                relative = absolute.subtract(v2(ref));\r\n                factor = relative.divideComponents(v2(ref.width, ref.height));\r\n            } else {\r\n                relative = absolute;\r\n            }\r\n\r\n            this.current.move({\r\n                relative: relative,\r\n                absolute: absolute,\r\n                offset: this.current.startOffset,\r\n                delta: v2(e.movementX, e.movementY),\r\n                total: absolute.add(this.current.startOffset).subtract(this.current.elementStart),\r\n                factor: factor,\r\n                e,\r\n            });\r\n        }\r\n    }\r\n    private scroll(key: string, e: WheelEvent) {\r\n        if (key && this.scrollListeners[key] && this.scrollListeners[key].enabled) {\r\n            const target = this.scrollListeners[key];\r\n            \r\n            const absolute = v2(e.clientX, e.clientY);\r\n            let relative: Vector2, factor: Vector2 = v2();\r\n            if (target.reference) {\r\n                const ref = target.reference.domElement.getBoundingClientRect();\r\n                relative = absolute.subtract(v2(ref));\r\n                factor = relative.divideComponents(v2(ref.width, ref.height));\r\n            } else {\r\n                relative = absolute;\r\n            }\r\n\r\n            target.scroll({\r\n                relative: relative,\r\n                absolute: absolute,\r\n                delta: e.deltaY,\r\n                factor: factor,\r\n                e,\r\n            });\r\n        }\r\n    }\r\n    private end() {\r\n        if (this.dragging) {\r\n            this.current.end?.();\r\n            this.current = undefined;\r\n            this.dragging = false;\r\n        }\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { WindowPanel } from './window';\r\n\r\nexport class NotesPanel extends WindowPanel {\r\n    private area: DomElement<\"textarea\">;\r\n    private text: string;\r\n    constructor() {\r\n        super('notes', 'Notes');\r\n        this.area = this.content.child('textarea')\r\n        this.area.domElement.addEventListener('change', (v)=>{\r\n            this.text = this.area.domElement.textContent;\r\n        })\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { WindowPanel } from './window';\r\n\r\nexport class ImportPanel extends WindowPanel {\r\n    constructor() {\r\n        super('import', 'Import');\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { WindowPanel } from './window';\r\n\r\nexport class ExportPanel extends WindowPanel {\r\n    constructor() {\r\n        super('export', 'Export');\r\n    }\r\n    public resize(): void {\r\n        super.resize();\r\n    }\r\n}", "import { SceneObject } from '../sceneobject';\r\nimport { SceneObjectComponentNode } from './sceneobjectComponentNode';\r\nimport { SceneObjectComponentOutline } from './sceneobjectComponentOutline';\r\nimport { SceneObjectComponentProperties } from './sceneobjectComponentProperties';\r\nimport { SceneObjectComponentTimeline } from './sceneobjectComponentTimeline';\r\nimport { SceneObjectComponentVisual } from './sceneobjectComponentVisual';\r\n\r\nexport interface SceneObjectComponentDict {\r\n    timeline: SceneObjectComponentTimeline;\r\n    node: SceneObjectComponentNode;\r\n    properties: SceneObjectComponentProperties;\r\n    visual: SceneObjectComponentVisual;\r\n    outline: SceneObjectComponentOutline;\r\n}\r\nexport interface SceneObjectComponentAttr {\r\n}\r\n\r\nexport class SceneObjectComponent<T extends keyof SceneObjectComponentDict = keyof SceneObjectComponentDict> {\r\n    sceneObject: SceneObject;\r\n\r\n    private _selected: boolean = false;\r\n    public get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n    public set selected(value: boolean) {\r\n        if (this._selected !== value) {\r\n            this._selected = value;\r\n            this.updateState();\r\n        }\r\n    }\r\n\r\n    protected updateState() {\r\n\r\n    }\r\n\r\n    key: string;\r\n    type: T;\r\n\r\n    constructor(type: T, { }: SceneObjectComponentAttr = {}) {\r\n        this.type = type;\r\n        this.key = $.unique;\r\n    }\r\n\r\n    build() {\r\n        $.scene.update(this.type);\r\n    }\r\n    resize() {\r\n        //void\r\n    }\r\n    delete() {\r\n    }\r\n}\r\n", "import { SceneObjectComponentAttr, SceneObjectComponent } from './sceneobjectComponent';\r\n\r\nexport interface SceneObjectComponentNodeAttr extends SceneObjectComponentAttr {\r\n\r\n}\r\nexport class SceneObjectComponentNode extends SceneObjectComponent<'node'> {\r\n    constructor(attr: SceneObjectComponentNodeAttr) {\r\n        super('node', attr);\r\n    }\r\n}", "import { Button } from '../../lib/dom/button';\r\nimport { DomElement } from '../../lib/dom/domElement';\r\nimport { Icon } from '../../lib/dom/icon';\r\nimport { SceneObjectComponentAttr, SceneObjectComponent } from './sceneobjectComponent';\r\n\r\nexport interface SceneObjectComponentOutlineAttr extends SceneObjectComponentAttr {\r\n\r\n}\r\nexport class SceneObjectComponentOutline extends SceneObjectComponent<'outline'> {\r\n    public element: DomElement<'div'>;\r\n    private _toggle: boolean = false;\r\n    public get toggle(): boolean {\r\n        return this._toggle;\r\n    }\r\n    public set toggle(value: boolean) {\r\n        this._toggle = value;\r\n        this.element.class(value, 'open');\r\n    }\r\n    constructor(attr: SceneObjectComponentOutlineAttr) {\r\n        super('outline', attr);\r\n    }\r\n\r\n    protected updateState() {\r\n        super.updateState();\r\n        this.element.class(this.selected, 'selected');\r\n    }\r\n\r\n    build(): void {\r\n        this.element = new DomElement('div', { className: 'sceneline' });\r\n        const head = this.element.child('div', { className: 'sceneline_head' });\r\n        head.append(new Button({\r\n            className: 'sceneline_head_collapse', icon: Icon.make('keyboard_arrow_down'), design: 'icon', onClick: () => {\r\n                this.toggle = !this.toggle;\r\n            }\r\n        }));\r\n        head.child('div', { className: 'sceneline_head_content', text: this.sceneObject.name || this.sceneObject.key });\r\n        const meta = head.child('div', { className: 'sceneline_head_meta' });\r\n        meta.append(new Button({\r\n            className: 'sceneline_select', icon: Icon.make('arrow_selector_tool'), design: 'icon', onClick: () => {\r\n                this.sceneObject.focus();\r\n            }\r\n        }));\r\n        meta.append(new Button({ icon: Icon.make('delete_forever'), design: 'icon', onClick: ()=>{\r\n            $.scene.remove(this.sceneObject);\r\n        } }));\r\n        // meta.append(new Button({ icon: Icon.make('visibility_off'), design: 'icon' }));\r\n        const content = this.element.child('div', { className: 'sceneline_content' });\r\n        let count = 0;\r\n        Object.values(this.sceneObject.components).forEach((c) => {\r\n            if (c.type !== 'outline') {\r\n                count++;\r\n                this.addLineChild(content, c);\r\n            }\r\n        });\r\n        content.setStyle('max-height', `${count * 30}px`);\r\n    }\r\n\r\n    addLineChild(parent: DomElement, o: SceneObjectComponent) {\r\n        const line = parent.child('div', { className: 'sceneline' });\r\n        const head = line.child('div', { className: 'sceneline_head' });\r\n        head.child('div', { className: 'sceneline_head_content', text: o.type });\r\n        const meta = head.child('div', { className: 'sceneline_head_meta' });\r\n        meta.append(new Button({\r\n            className: 'sceneline_select', icon: Icon.make('arrow_selector_tool'), design: 'icon', onClick: () => {\r\n                this.sceneObject.focus();\r\n            }\r\n        }));\r\n    }\r\n    delete(): void {\r\n        super.delete();\r\n        if (this.element.domElement.parentElement)this.element.domElement.parentElement.removeChild(this.element.domElement)\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { PropsInput } from '../../panels/properties/propsInput';\r\nimport { SceneObjectComponentAttr, SceneObjectComponent } from './sceneobjectComponent';\r\n\r\nexport interface SceneObjectComponentPropertiesAttr extends SceneObjectComponentAttr {\r\n\r\n}\r\nexport class SceneObjectComponentProperties extends SceneObjectComponent<'properties'> {\r\n    public element: DomElement<'div'>;\r\n    public data: Record<string, {\r\n        name: string,\r\n        input: PropsInput,\r\n        element: DomElement<'div'>;\r\n    }> = {};\r\n\r\n    constructor(attr: SceneObjectComponentPropertiesAttr) {\r\n        super('properties', attr);\r\n\r\n        this.element = new DomElement('div', {\r\n            className: 'props'\r\n        });\r\n    }\r\n\r\n    add(key: string, data: {\r\n        name: string,\r\n        input: PropsInput,\r\n    }): typeof data['input'] {\r\n        if (this.data[key]) this.remove(key); \r\n        const el = new DomElement('div', {className: 'prop'});\r\n        this.element.append(el);\r\n        el.child('label', {\r\n            text: data.name,\r\n            className: 'props_label'\r\n        })\r\n        el.append(data.input)\r\n        this.data[key] = {\r\n            ...data,\r\n            ...{\r\n                element: el\r\n            }\r\n        };\r\n        return data.input\r\n    }\r\n\r\n    remove(key: string) {\r\n        if (this.data[key]) {\r\n            this.element.remove(this.data[key].element);\r\n            delete this.data[key]\r\n        }\r\n    }\r\n\r\n    update(key: string, obj: {\r\n        name?: string,\r\n        value?: string,\r\n    }) {\r\n        Object.assign(this.data[key], obj);\r\n        this.updateValue(key);\r\n    }\r\n\r\n    delete(): void {\r\n        super.delete();\r\n        Object.keys(this.data).forEach((d)=>{\r\n            this.remove(d)\r\n        }) \r\n    }\r\n\r\n    updateValue(key: string) {\r\n\r\n    }\r\n\r\n}", "import { DomElement, DomElementProperties } from './domElement';\r\n\r\nexport interface DomInputProperties extends DomElementProperties {\r\n    onKeyUp?: (e: Event)=>void;\r\n    onChange?: (e: Event)=>void;\r\n    value?: string;\r\n}\r\nexport class DomInput<T extends 'textarea'|'input'|'select' = 'textarea'|'input'|'select'> extends DomElement {\r\n    protected props: DomInputProperties;\r\n    public domElement: HTMLElementTagNameMap[T];\r\n\r\n    public get value(): string {\r\n        return this.domElement.value;\r\n    }\r\n    public set value(value: string) {\r\n        this.domElement.value = value;\r\n    }\r\n    private _onChange?: (e: Event) => void;\r\n    public get onChange(): (e: Event) => void {\r\n        return this._onChange;\r\n    }\r\n    public set onChange(func: (e: Event) => void | undefined) {\r\n        if (this._onChange) {\r\n            this.domElement.removeEventListener('change', this._onChange.bind(this));\r\n            this._onChange = undefined;\r\n        }\r\n        if (func) {\r\n            this._onChange = func;\r\n            this.domElement.addEventListener('change', this._onChange.bind(this));\r\n        }\r\n    }\r\n    private _onKeyUp?: (e: Event) => void;\r\n    public get onKeyUp(): (e: Event) => void {\r\n        return this._onKeyUp;\r\n    }\r\n    public set onKeyUp(func: (e: Event) => void | undefined) {\r\n        if (this._onKeyUp) {\r\n            this.domElement.removeEventListener('change', this._onKeyUp.bind(this));\r\n            this._onKeyUp = undefined;\r\n        }\r\n        if (func) {\r\n            this._onKeyUp = func;\r\n            this.domElement.addEventListener('change', this._onKeyUp.bind(this));\r\n        }\r\n    }\r\n    public constructor(protected type: T, properties: DomInputProperties = {}) {\r\n        super(type, properties);\r\n        if (this.props.onChange) this.onChange = this.props.onChange.bind(this);\r\n        if (this.props.onKeyUp) this.onKeyUp = this.props.onKeyUp.bind(this);\r\n        if (this.props.value) this.value = this.props.value;\r\n    }\r\n}", "import { DomInput, DomInputProperties } from './domInput';\r\n\r\nexport interface DomSelectProperties extends DomInputProperties {\r\n    options?: [string, string][],\r\n}\r\nexport class DomSelect extends DomInput<'select'> {\r\n    protected props: DomSelectProperties;\r\n    public domElement: HTMLSelectElement;\r\n\r\n    public get value(): string {\r\n        return super.value;;\r\n    }\r\n    public set value(value: string) {\r\n        super.value = value;\r\n    }\r\n\r\n    public constructor(properties: DomSelectProperties = {}) {\r\n        super('select', properties);\r\n        if (properties.options) properties.options.forEach(([value,text]) => {\r\n            this.child('option', {\r\n                text: text,\r\n                attr: {\r\n                    'value': value,\r\n                }\r\n            });\r\n        });\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { Vector2 } from '../../lib/utilities/vector2';\r\n\r\nexport class PropsInput<R = string | Vector2 | number> extends DomElement<'div'> {\r\n    private _value: R;\r\n    public get value(): R {\r\n        return this._value;\r\n    }\r\n    public set value(value: R) {\r\n        this._value = value;\r\n        this.onChange(this._value);\r\n    }\r\n    private onChange: (v: R) => void;\r\n    constructor({ onChange, classList = '' }: { onChange: (v: R) => void; classList?:string }) {\r\n        super('div', {className: `props_input ${classList}`});\r\n        this.onChange = onChange;\r\n    }\r\n    public silent(v: R) {\r\n        this._value = v;\r\n    }\r\n}\r\n\r\n", "import { DomSelect } from '../../lib/dom/domSelect';\r\nimport { PropsInput } from './propsInput';\r\n\r\nexport class PropsInputSelect<T extends string = string> extends PropsInput<string> {\r\n    input: DomSelect;\r\n    constructor(onChange: (v: T) => void, options: [T, string][], def?: string) {\r\n        super({\r\n            onChange,\r\n            classList: 'vector',\r\n        });\r\n        this.input = this.append(new DomSelect({\r\n            attr: {\r\n                'type': 'number',\r\n            },\r\n            onChange: () => this.value =this.input.domElement.value, \r\n            value: def ? String(def[0]) : '',\r\n            options\r\n        })) as DomSelect;\r\n    }\r\n    silent(v: string) {\r\n        this.input.value = this.value;\r\n    }\r\n}", "import { DomInput } from '../../lib/dom/domInput';\r\nimport { PropsInput } from './propsInput';\r\n\r\nexport class PropsInputString extends PropsInput<string> {\r\n    input: DomInput<\"input\">;\r\n    constructor(onChange: (v: string) => void, def?: string) {\r\n        super({\r\n            onChange,\r\n            classList: 'string',\r\n        });\r\n        this.input = this.append(new DomInput('input', {\r\n            attr: {\r\n                'type': 'string',\r\n            },\r\n            onChange: () => this.value = (this.input.domElement.value),\r\n            value: def?def:''\r\n        })) as DomInput<'input'>;\r\n    }\r\n    public silent(v: string) {\r\n        super.silent(v);\r\n        this.input.value = String(v);\r\n    }\r\n}", "import { DomInput } from '../../lib/dom/domInput';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\nimport { PropsInput } from './propsInput';\r\n\r\nexport class PropsInputVector extends PropsInput<Vector2> {\r\n    input1: DomInput<\"input\">;\r\n    input2: DomInput<\"input\">;\r\n    constructor(onChange: (v: Vector2) => void, def?: Vector2) {\r\n        super({\r\n            onChange,\r\n            classList: 'vector',\r\n        });\r\n        this.input1 = this.append(new DomInput('input', {\r\n            attr: {\r\n                'type': 'number',\r\n            },\r\n            onChange: () => this.value = v2(\r\n                Number(this.input1.domElement.value),\r\n                this.value[1]\r\n            ),\r\n            value: def ? String(def[0]) : ''\r\n        })) as DomInput<'input'>;\r\n        this.input2 = this.append(new DomInput('input', {\r\n            attr: {\r\n                'type': 'number',\r\n            },\r\n            onChange: () => this.value = v2(\r\n                this.value[0],\r\n                Number(this.input2.domElement.value),\r\n            ),\r\n            value: def ? String(def[1]) : ''\r\n        })) as DomInput<'input'>;\r\n    }\r\n    silent(v: Vector2) {\r\n        super.silent(v.c());\r\n        this.input1.value = String(this.value[0]);\r\n        this.input2.value = String(this.value[1]);\r\n    }\r\n}", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { v2, Vector2 } from '../../lib/utilities/vector2';\r\nimport { GraphicPanel } from '../../panels/graphic/graphicPanel';\r\nimport { PropsInputSelect } from '../../panels/properties/propsInputSelect';\r\nimport { PropsInputString } from '../../panels/properties/propsInputString';\r\nimport { PropsInputVector } from '../../panels/properties/propsInputVector';\r\nimport { SceneObject } from '../sceneobject';\r\nimport { SceneObjectComponentAttr, SceneObjectComponent } from './sceneobjectComponent';\r\n\r\nexport abstract class VisualAsset<T extends keyof SceneObjectComponentVisual['dict'] = any> extends DomElement<'div'> {\r\n    data: {\r\n        visualType: T;\r\n    };\r\n    sceneObject: SceneObject;\r\n    constructor(data: VisualAsset['data']) {\r\n        super('div', {\r\n            className: `visual visual_${data.visualType}`,\r\n        });\r\n        this.data = data;\r\n    }\r\n    build(s: SceneObject) {\r\n        this.sceneObject = s;\r\n    }\r\n    set() {\r\n\r\n    }\r\n}\r\nexport class VisualImage extends VisualAsset<'image'> {\r\n    data: {\r\n        visualType: 'image';\r\n        size: Vector2;\r\n        url?: string;\r\n        backgroundSize?: 'auto' | 'contain' | 'cover',\r\n    } = {\r\n            visualType: 'image',\r\n            size: v2(),\r\n            // url: 'https://upload.wikimedia.org/wikipedia/commons/b/bd/Test.svg',\r\n            url: '',\r\n            backgroundSize: 'cover',\r\n        };\r\n    url: PropsInputString;\r\n    sizeInput: PropsInputVector;\r\n    backgroundSize: PropsInputSelect;\r\n    constructor(data: VisualImage['data']) {\r\n        super(data);\r\n        Object.assign(this.data, data);\r\n        this.set(data);\r\n    }\r\n\r\n    build(s: SceneObject): void {\r\n        super.build(s);\r\n\r\n\r\n        this.sizeInput = this.sceneObject.defineProperty($.unique, {\r\n            input: new PropsInputVector((v) => {\r\n                this.set({\r\n                    size: v.c()\r\n                });\r\n            }),\r\n            name: 'Size'\r\n        }) as PropsInputVector;\r\n\r\n        this.url = this.sceneObject.defineProperty($.unique, {\r\n            input: new PropsInputString((v) => {\r\n                this.set({\r\n                    url: v\r\n                });\r\n            }),\r\n            name: 'URL'\r\n        }) as PropsInputString;\r\n\r\n        this.backgroundSize = this.sceneObject.defineProperty($.unique, {\r\n            input: new PropsInputSelect((v) => {\r\n                this.set({ \r\n                    backgroundSize: v \r\n                });\r\n            }, [['auto', 'Auto'], ['contain', 'Contain'], ['cover', 'Cover']], 'auto'),\r\n            name: 'Background-size',\r\n        }) as PropsInputSelect;\r\n        this.set();\r\n    }\r\n\r\n    set(d?: VisualImage['data'] | {}) {\r\n        Object.assign(this.data, d);\r\n        this.setStyle('width', `${this.data.size.x}px`);\r\n        this.setStyle('height', `${this.data.size.y}px`);\r\n        if (this.data.url) {\r\n            this.class(false, 'empty');\r\n            this.setStyle('background-image', `url(${this.data.url})`);\r\n        } else {\r\n            this.class(true, 'empty');\r\n            this.setStyle('background-image', undefined);\r\n        }\r\n        this.setStyle('background-size', this.data.backgroundSize);\r\n        this.sizeInput?.silent(this.data.size);\r\n        this.url?.silent(this.data.url);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport interface SceneObjectComponentVisualAttr extends SceneObjectComponentAttr {\r\n    position: Vector2;\r\n    asset: VisualImage['data'];\r\n}\r\nexport type VisualTypes = 'image';\r\nexport class SceneObjectComponentVisual extends SceneObjectComponent<'visual'> {\r\n    private dict: {\r\n        'image': typeof VisualImage;\r\n    } = {\r\n            image: VisualImage\r\n        };\r\n\r\n    public element: DomElement<\"div\">;\r\n    public readonly visualType: SceneObjectComponentVisualAttr['asset']['visualType'];\r\n    visual: VisualImage;\r\n    resizerKey: string;\r\n    resizer: any;\r\n    panel: GraphicPanel;\r\n    attr: SceneObjectComponentVisualAttr;\r\n    parent: DomElement<keyof HTMLElementTagNameMap>;\r\n    positionInput: PropsInputVector;\r\n\r\n    protected updateState() {\r\n        super.updateState();\r\n        this.element.class(this.selected, 'selected');\r\n    }\r\n\r\n    constructor(attr: SceneObjectComponentVisualAttr) {\r\n        super('visual', attr);\r\n\r\n        this.element = new DomElement('div', {\r\n            className: 'SceneObjectVisual',\r\n        });\r\n\r\n        this.attr = { ...attr };\r\n        this.visualType = attr.asset.visualType;\r\n    }\r\n\r\n    build(): void {\r\n        super.build();\r\n        this.panel = $.panels.getPanel('graphic') as GraphicPanel;\r\n\r\n        this.positionInput = this.sceneObject.defineProperty($.unique, {\r\n            input: new PropsInputVector((v) => {\r\n                this.setPosition(v.c());\r\n            }),\r\n            name: 'Position'\r\n        }) as PropsInputVector;\r\n\r\n        this.visual = new (this.dict[this.visualType])(this.attr.asset);\r\n        this.visual.build(this.sceneObject);\r\n\r\n        this.element.append(this.visual);\r\n        this.setPosition(this.attr.position.floor());\r\n\r\n        $.mouse.registerDrag($.unique, {\r\n            element: this.element,\r\n            cursor: 'move',\r\n            reference: this.panel.graphic,\r\n            initialTolerance: 400,\r\n            start: () => {\r\n                this.sceneObject.focus();\r\n            },\r\n            move: (e) => {\r\n                if (e.e.ctrlKey && e.e.shiftKey) {\r\n                    this.attr.position = e.relative.add(e.offset).scale((1 / this.panel.camera.scale)).scale(0.04).floor().scale(25);\r\n                } else if (e.e.ctrlKey) {\r\n                    this.attr.position = e.relative.add(e.offset).scale((1 / this.panel.camera.scale)).scale(0.1).floor().scale(10);\r\n                } else if (e.e.shiftKey) {\r\n                    this.attr.position = e.relative.add(e.offset).scale((1 / this.panel.camera.scale)).scale(0.2).floor().scale(5);\r\n                } else {\r\n                    this.attr.position = e.relative.add(e.offset).scale((1 / this.panel.camera.scale)).floor();\r\n                }\r\n                this.setPosition(this.attr.position);\r\n            }\r\n        });\r\n\r\n        this.resizerKey = $.mouse.registerDrag($.unique, {\r\n            element: this.resizer = this.element.child('span', {\r\n                className: `resizer`\r\n            }),\r\n            reference: this.element,\r\n            initialTolerance: 400,\r\n            cursor: 'nw-resize',\r\n            start: () => {\r\n                this.sceneObject.focus();\r\n            },\r\n            move: (e) => {\r\n                if (e.e.ctrlKey && e.e.shiftKey) {\r\n                    this.visual.set({\r\n                        size: e.relative.scale(1 / (this.panel.camera.scale)).scale(0.04).floor().scale(25)\r\n                    });\r\n                } else if (e.e.ctrlKey) {\r\n                    this.visual.set({\r\n                        size: e.relative.scale(1 / (this.panel.camera.scale)).scale(0.1).floor().scale(10)\r\n                    });\r\n                } else if (e.e.shiftKey) {\r\n                    this.visual.set({\r\n                        size: e.relative.scale(1 / (this.panel.camera.scale)).scale(0.2).floor().scale(5)\r\n                    });\r\n                } else {\r\n                    this.visual.set({\r\n                        size: e.relative.scale(1 / (this.panel.camera.scale)).floor()\r\n                    });\r\n                }\r\n            },\r\n        });\r\n\r\n\r\n    }\r\n    add(parent: DomElement) {\r\n        this.delete();\r\n        this.parent = parent;\r\n        this.parent.append(this.element);\r\n    }\r\n    delete(): void {\r\n        super.delete();\r\n        if (this.parent) {\r\n            this.parent.remove(this.element);\r\n        }\r\n    }\r\n    update() {\r\n        this.setPosition();\r\n        this.visual.set();\r\n    }\r\n    setPosition(v?: Vector2) {\r\n        if (v) this.attr.position = v;\r\n        this.element.setStyle('left', `${this.attr.position[0]}px`);\r\n        this.element.setStyle('top', `${this.attr.position[1]}px`);\r\n        this.positionInput?.silent(this.attr.position);\r\n    }\r\n}", "import { GraphicPanel } from '../panels/graphic/graphicPanel';\r\nimport { SceneObjectComponentNode } from './components/sceneobjectComponentNode';\r\nimport { SceneObjectComponentOutline } from './components/sceneobjectComponentOutline';\r\nimport { SceneObjectComponentProperties } from './components/sceneobjectComponentProperties';\r\nimport { SceneObjectComponentTimeline } from './components/sceneobjectComponentTimeline';\r\nimport { SceneObjectComponentVisual, SceneObjectComponentVisualAttr } from './components/sceneobjectComponentVisual';\r\n\r\nexport interface SceneObjectAttr {\r\n    key?: string,\r\n    name?: string,\r\n    visual: SceneObjectComponentVisualAttr;\r\n}\r\nexport class SceneObject {\r\n    active: boolean = true;\r\n    name: string = '';\r\n    private _selected: boolean = false;\r\n    public get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n    public set selected(value: boolean) {\r\n        if (this._selected !== value) {\r\n            this._selected = value;\r\n            Object.values(this.components).forEach((c) => c.selected = value);\r\n        }\r\n    }\r\n    key: string;\r\n\r\n    public properties: Record<string, {\r\n        name: string,\r\n        value: string,\r\n        type: string,\r\n    }> = {};\r\n\r\n    public get defineProperty(): SceneObjectComponentProperties['add'] {\r\n        return this.components.properties.add.bind(this.components.properties);\r\n    }\r\n    public get undefineProperty(): SceneObjectComponentProperties['remove'] {\r\n        return this.components.properties.remove.bind(this.components.properties);\r\n    }\r\n    public get updateProperty(): SceneObjectComponentProperties['update'] {\r\n        return this.components.properties.update.bind(this.components.properties);\r\n    }\r\n\r\n    components: {\r\n        visual: SceneObjectComponentVisual,\r\n        node: SceneObjectComponentNode,\r\n        properties: SceneObjectComponentProperties,\r\n        outline: SceneObjectComponentOutline;\r\n        timeline?: SceneObjectComponentTimeline;\r\n    };\r\n\r\n    public visualPanel: GraphicPanel;\r\n\r\n    constructor({ key, visual, name }: SceneObjectAttr) {\r\n        this.key = key || $.unique;\r\n        this.name = name || '';\r\n        this.createComponents(visual);\r\n    }\r\n\r\n    createComponents(visual?: SceneObjectComponentVisualAttr) {\r\n        \r\n        this.components = {\r\n            visual: new SceneObjectComponentVisual({...visual}),\r\n            node: new SceneObjectComponentNode({ key: $.unique }),\r\n            properties: new SceneObjectComponentProperties({ key: $.unique }),\r\n            outline: new SceneObjectComponentOutline({ key: $.unique })\r\n        };\r\n\r\n        Object.values(this.components).forEach((c) => {\r\n            c.sceneObject = this;\r\n            c.selected = this.selected;\r\n        });\r\n    }\r\n    resize() {\r\n        Object.values(this.components).forEach((c) => {\r\n            c.resize();\r\n        });\r\n    }\r\n    delete() {\r\n        Object.values(this.components).forEach((c) => {\r\n            c.delete();\r\n        });\r\n    }\r\n    focus() {\r\n        $.scene.focus(this);\r\n    }\r\n    build() {\r\n        Object.values(this.components).forEach((c) => {\r\n            c.sceneObject = this;\r\n        });\r\n\r\n        this.components['outline'].build();\r\n        this.components['properties'].build();\r\n        this.components['visual'].build();\r\n        this.components['node'].build();\r\n        this.components['outline'].build();\r\n        this.components['timeline']?.build();\r\n    }\r\n}\r\n", "import { GraphicPanel } from '../panels/graphic/graphicPanel';\r\nimport { NodeEditorPanel } from '../panels/node/nodePanel';\r\nimport { OutlinerPanel } from '../panels/outliner';\r\nimport { PropertiesPanel } from '../panels/properties/propertiesPanel';\r\nimport { TimelinePanel } from '../panels/timeline';\r\nimport { SceneObjectComponentDict } from './components/sceneobjectComponent';\r\nimport { SceneObject, SceneObjectAttr } from './sceneobject';\r\n\r\n\r\nexport interface SceneObjectManagerPanels {\r\n    graphic: GraphicPanel,\r\n    properties: PropertiesPanel,\r\n    node: NodeEditorPanel,\r\n    timeline: TimelinePanel,\r\n    outliner: OutlinerPanel,\r\n}\r\n/**\r\n * Manages all sceneObjects that are used across the interface.\r\n * @access This class is globally accesible using `$.scene`.\r\n */\r\nexport class SceneObjectManager {\r\n\r\n    private sceneObjects: Record<string, SceneObject> = {};\r\n    public selected: SceneObject;\r\n    constructor(private panels: SceneObjectManagerPanels) {\r\n\r\n    }\r\n    /** \r\n     * Adds a `SceneObject` to the scene \r\n     * @return Returns the `SceneObject`\r\n    */\r\n    public add(n: SceneObjectAttr) {\r\n        if (!n) return;\r\n        const d = new SceneObject(n);\r\n        this.sceneObjects[d.key] = d;\r\n        \r\n        d.build();\r\n        this.update('outline')\r\n        return n;\r\n    }\r\n\r\n    /** \r\n     * Removes a `SceneObject` to the scene \r\n     * @remarks This method will call the {@link SceneObject.delete() `delete()`} method on the sceneobject to ensure neat deletion. \r\n    */\r\n    public remove(n: SceneObject) {\r\n        if (!n || !this.sceneObjects[n.key]) return;\r\n        n.delete();\r\n        if (n === this.selected) this.focus();\r\n        delete this.sceneObjects[n.key];\r\n        this.update('all')\r\n    }\r\n\r\n    /** \r\n     * Handle a resizing window.\r\n     * @remarks This method will call the {@link SceneObject.resize() `resize()`} method on all {@link SceneObject `sceneObjects`} in the scene. \r\n    */\r\n    public resize() {\r\n        Object.values(this.sceneObjects).forEach((n) => {\r\n            n.resize();\r\n        });\r\n    }\r\n\r\n    /** \r\n     * Empty all {@link SceneObject `sceneObjects`} from the scene.\r\n     * @remarks This method will call the {@link SceneObjectManager.remove() `remove()`} method on all {@link SceneObject sceneObjects} in the scene. \r\n    */\r\n    public clear() {\r\n        Object.values(this.sceneObjects).forEach((n) => {\r\n            this.remove(n);\r\n        });\r\n    }\r\n\r\n    /** \r\n     * Bulk creates and adds multple {@link SceneObject `sceneObjects`} to the scene.\r\n     * @remarks Often used for importing an entire scene\r\n     * @param clear Should the {@link SceneObjectManager.clear() `clear()`} method be run to empty the scene? \r\n    */\r\n    public bulk(v: SceneObjectAttr[], clear: boolean = false) {\r\n        if (clear) this.clear();\r\n        v.forEach((n) => {\r\n            this.add(n);\r\n        });\r\n    }\r\n\r\n    public focus(s?: SceneObject) {\r\n        this.selected = undefined;\r\n        Object.values(this.sceneObjects).forEach((n) => {\r\n            n.selected = n === s;\r\n            if (n.selected) this.selected = n;\r\n        });\r\n        $.state[this.selected ? 'set' : 'unset']('selected');\r\n        this.update('all')\r\n    }\r\n\r\n    public getComponentsByType<T extends keyof SceneObject['components']>(type: T): SceneObject['components'][T][] {\r\n        return Object.values(this.sceneObjects).map((so) => so.components[type]);\r\n    }\r\n\r\n    public update<T extends keyof SceneObjectComponentDict>(type: T | 'all' = 'all') {\r\n        this.panels.outliner.update(Object.values(this.sceneObjects));\r\n        if (type === 'visual' || type === 'all') {\r\n            this.panels.graphic.update(this.getComponentsByType('visual'));\r\n        }\r\n        if (type === 'properties' || type === 'all') {\r\n            const d = Object.values(this.sceneObjects).find((o)=>o.selected)\r\n            if (d) {\r\n                this.panels.properties.update(d.components.properties);\r\n            } else {\r\n                this.panels.properties.update()\r\n            }\r\n        }\r\n    }\r\n    public keyExists(n: string) {\r\n        return Boolean(this.sceneObjects[n]);\r\n    }\r\n}\r\n", "import { DomElement } from '../../lib/dom/domElement';\r\nimport { Icon } from '../../lib/dom/icon';\r\nimport { SceneObjectAttr } from '../../sceneobjects/sceneobject';\r\n\r\nexport interface LibraryItemAttr {\r\n    key: string,\r\n    name: string,\r\n    image: string|Icon,\r\n    content: SceneObjectAttr[]\r\n}\r\nexport class LibraryItem extends DomElement<'div'>{\r\n    constructor(attr: LibraryItemAttr) {\r\n        super('div', {\r\n            className: 'library_item',\r\n            onClick: ()=> {\r\n                attr.content.forEach((s,i)=>$.scene.add({...s}))\r\n            }\r\n        })\r\n        if (typeof attr.image === 'string'){\r\n            this.child('div', {className:'library_item_image', style: {\r\n                'background-image':`url(${attr.image})` \r\n            }})\r\n        } else {\r\n            this.append(attr.image);\r\n        }\r\n        this.child('div', {className:'library_item_name', text: attr.name})\r\n    }\r\n}", "import { Panel } from '../../interface/panel';\r\nimport { DomElement } from '../../lib/dom/domElement';\r\nimport { IconProperties, Icon } from '../../lib/dom/icon';\r\nimport { LibraryItem, LibraryItemAttr } from './libraryItem';\r\n\r\nexport class LibraryPanel extends Panel {\r\n    public icon: IconProperties = Icon.make('video_library');\r\n\r\n    constructor(list: [string, LibraryItemAttr[]][] = []) {\r\n        super('library', 'Library');\r\n        list.forEach((l) => {\r\n            this.addCategories(l);\r\n        });\r\n\r\n    }\r\n\r\n    addCategories([k, items]:[string, LibraryItemAttr[]] ) {\r\n        const w = this.content.child('div', {className: 'library_category'});\r\n        w.child('div', {className: 'library_category_name', text: k});\r\n        items.forEach((l) => {\r\n            this.addItem(w,l);\r\n        });\r\n    }\r\n\r\n    addItem(parent: DomElement, l: LibraryItemAttr) {\r\n        parent.append(new LibraryItem(l));\r\n    }\r\n}", "import { WorkSpace } from './interface/interface';\r\nimport { PanelManager } from './interface/panelManager';\r\nimport { NodeEditorPanel } from './panels/node/nodePanel';\r\nimport { OutlinerPanel } from './panels/outliner';\r\nimport { PropertiesPanel } from './panels/properties/propertiesPanel';\r\nimport { TimelinePanel } from './panels/timeline';\r\nimport { Ticker } from './lib/utilities/ticker';\r\nimport { GraphicPanel } from './panels/graphic/graphicPanel';\r\nimport { WindowManager } from './interface/windows/windowManager';\r\nimport { SettingsPanel } from './interface/windows/settings';\r\nimport { DragManager } from './interface/dragging/dragManager';\r\nimport { NotesPanel } from './interface/windows/notes';\r\nimport { ImportPanel } from './interface/windows/import';\r\nimport { ExportPanel } from './interface/windows/export';\r\nimport { SceneObjectManager } from './sceneobjects/sceneobjectManager';\r\nimport { v2 } from './lib/utilities/vector2';\r\nimport { LibraryPanel } from './panels/library/libraryPanel';\r\nimport { Icon } from './lib/dom/icon';\r\n\r\n\r\n\r\n\r\nexport class Main {\r\n    public ticker: Ticker;\r\n\r\n    public constructor() {\r\n        /*  TODO\r\n        - Timeline for specific animation nodes\r\n        - Properties panel that shows options for each node. \r\n        */\r\n\r\n        $.main = this;\r\n        $.mouse = new DragManager();\r\n        $.panels = new PanelManager([\r\n            new GraphicPanel(),\r\n            new NodeEditorPanel(),\r\n            new OutlinerPanel(),\r\n            new PropertiesPanel(),\r\n            new TimelinePanel(),\r\n            new LibraryPanel([\r\n                ['Images', [{\r\n                    image: new Icon({ name: 'image' }),\r\n                    name: 'Image',\r\n                    key: 'image',\r\n                    content: [\r\n                        {\r\n                            name: 'Image',\r\n                            visual: {\r\n                                position: v2(0, 0),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(50, 50),\r\n\r\n                                }\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    image: new Icon({ name: 'fullscreen' }),\r\n                    name: 'Fullscreen',\r\n                    key: 'fullscreen',\r\n                    content: [\r\n                        {\r\n                            name: 'Fullscreen image',\r\n                            visual: {\r\n                                position: v2(0, 0),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(505, 545),\r\n\r\n                                }\r\n                            }\r\n                        },\r\n                    ]\r\n                }]],\r\n                ['Templates', [{\r\n                    image: new Icon({ name: 'grid_view' }),\r\n                    name: 'Grid (2x2)',\r\n                    key: 'template1',\r\n                    content: [\r\n                        {\r\n                            name: 'top left',\r\n                            visual: {\r\n                                position: v2(10, 35),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(240, 240),\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'top right',\r\n                            visual: {\r\n                                position: v2(255, 35),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(240, 240),\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'bottom left',\r\n                            visual: {\r\n                                position: v2(10, 280),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(240, 240),\r\n\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'bottom right',\r\n                            visual: {\r\n                                position: v2(255, 280),\r\n                                asset: {\r\n                                    visualType: 'image',\r\n                                    size: v2(240, 240),\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                }]]\r\n            ]),\r\n        ]);\r\n        $.windows = new WindowManager([\r\n            new SettingsPanel(),\r\n            new NotesPanel(),\r\n            new ImportPanel(),\r\n            new ExportPanel(),\r\n        ]);\r\n        $.workspace = new WorkSpace({\r\n            default: {\r\n                name: 'Builder',\r\n                icon: Icon.make('space_dashboard'),\r\n                data: [1, 'h', 15, [2, 'library'], [1, 'h', 70, [2, 'graphic'], [1, 'v', 50, [2, 'outliner'], [2, 'properties']]]]\r\n            },\r\n            grid: {\r\n                name: 'Grid',\r\n                icon: Icon.make('window'),\r\n                data: [1, 'h', 50, [1, 'v', 50, [0], [0]], [1, 'v', 50, [0], [0]]]\r\n            },\r\n        });\r\n        $.scene = new SceneObjectManager({\r\n            graphic: $.panels.getPanel('graphic') as GraphicPanel,\r\n            properties: $.panels.getPanel('properties') as PropertiesPanel,\r\n            node: $.panels.getPanel('node') as NodeEditorPanel,\r\n            timeline: $.panels.getPanel('timeline') as TimelinePanel,\r\n            outliner: $.panels.getPanel('outliner') as OutlinerPanel,\r\n        });\r\n\r\n        $.workspace.resize();\r\n\r\n        $.panels.forEach(([k, p]) => p.build());\r\n\r\n        // $.scene.bulk([\r\n        //     {\r\n        //         key: $.unique,\r\n        //         components: [\r\n        //             new SceneObjectComponentVisual({\r\n        //                 key: $.unique,\r\n        //                 position: v2(10, 10),\r\n        //                 asset: {\r\n        //                     visualType: 'image',\r\n        //                     size: v2(100, 100),\r\n\r\n        //                 }\r\n        //             })\r\n        //         ]\r\n        //     },\r\n        //     {\r\n        //         key: $.unique,\r\n        //         components: [\r\n        //             new SceneObjectComponentVisual({\r\n        //                 key: $.unique,\r\n        //                 position: v2(0, 405),\r\n        //                 asset: {\r\n        //                     visualType: 'image',\r\n        //                     size: v2(505, 100),\r\n\r\n        //                 }\r\n        //             })\r\n        //         ]\r\n        //     }\r\n        // ]\r\n        // );\r\n\r\n        setTimeout(() => {\r\n            $.workspace.resize();\r\n            ($.panels.getPanel('graphic') as GraphicPanel).camera.center();\r\n        }, 1);\r\n    }\r\n\r\n    public tick() {\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { DragManager } from './interface/dragging/dragManager';\r\nimport { WorkSpace } from './interface/interface';\r\nimport { PanelManager } from './interface/panelManager';\r\nimport { WindowManager } from './interface/windows/windowManager';\r\nimport { Vector2 } from './lib/utilities/vector2';\r\nimport { Main } from \"./main\";\r\nimport { SceneObjectManager } from './sceneobjects/sceneobjectManager';\r\n\r\ndeclare global {\r\n  var $: Glob;\r\n}\r\nclass Glob {\r\n  public main: Main;\r\n  public workspace: WorkSpace;\r\n  public panels: PanelManager;\r\n  public windows: WindowManager;\r\n  public windowSize: Vector2;\r\n  public mouse: DragManager;\r\n  public scene: SceneObjectManager;\r\n  public get unique(): string {\r\n    this.uniqueIndex++;\r\n    return (this.uniqueIndex + 10000).toString(16);\r\n  }\r\n  public state = new (class state {\r\n    private list: string[] = [];\r\n    set(n: string) {\r\n      if (!this.list.includes(n)) { \r\n        this.list.push(n); \r\n        document.body.classList.add(`state_${n}`)\r\n      }\r\n    }\r\n    unset(n: string) {\r\n      if (this.list.includes(n)) {\r\n        this.list.splice(this.list.indexOf(n), 1); \r\n        document.body.classList.remove(`state_${n}`)\r\n      }\r\n    }\r\n    check(n: string) {\r\n      return this.list.includes(n);\r\n    }\r\n\r\n  })();\r\n  private uniqueIndex: number = 0;\r\n};\r\nwindow.$ = new Glob();\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  const g = new Main();\r\n  document.body.appendChild($.workspace.domElement);\r\n});"],
  "mappings": "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",
  "names": ["c"]
}
